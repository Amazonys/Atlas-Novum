#All scopes are country scope
#All parameters are optional

 estate_nobles_rural_gov_0 = {
	icon = estate_nobles_rural_govt_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_1
				has_estate_privilege = estate_nobles_rural_gov_2
				has_estate_privilege = estate_nobles_rural_gov_3
				has_estate_privilege = estate_nobles_rural_gov_4
				has_estate_privilege = estate_nobles_rural_gov_5 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		state_governing_cost = -0.5
	}
 	penalties = { 
		development_cost = 0.2
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_rural_gov_1 = {
	icon = estate_nobles_rural_govt_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_0
				has_estate_privilege = estate_nobles_rural_gov_2
				has_estate_privilege = estate_nobles_rural_gov_3
				has_estate_privilege = estate_nobles_rural_gov_4
				has_estate_privilege = estate_nobles_rural_gov_5 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		state_governing_cost = -0.3
	}
 	penalties = { 
		development_cost = 0.1
	}
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 
 estate_nobles_rural_gov_2 = {
	icon = estate_nobles_rural_govt_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_0
				has_estate_privilege = estate_nobles_rural_gov_1
				has_estate_privilege = estate_nobles_rural_gov_3
				has_estate_privilege = estate_nobles_rural_gov_4
				has_estate_privilege = estate_nobles_rural_gov_5 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		state_governing_cost = -0.15
	}
 	penalties = { 
		development_cost = 0.05
	}
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 
 estate_nobles_rural_gov_3 = {
	icon = estate_nobles_rural_govt_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_0
				has_estate_privilege = estate_nobles_rural_gov_1
				has_estate_privilege = estate_nobles_rural_gov_2
				has_estate_privilege = estate_nobles_rural_gov_4
				has_estate_privilege = estate_nobles_rural_gov_5 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 
 estate_nobles_rural_gov_4 = {
	icon = estate_nobles_rural_govt_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_0
				has_estate_privilege = estate_nobles_rural_gov_1
				has_estate_privilege = estate_nobles_rural_gov_2
				has_estate_privilege = estate_nobles_rural_gov_3
				has_estate_privilege = estate_nobles_rural_gov_5 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		development_cost = -0.05
	}
 	penalties = { 
		state_governing_cost = 0.25
	}
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 
 estate_nobles_rural_gov_5 = {
	icon = estate_nobles_rural_govt_VI
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_rural_gov_0
				has_estate_privilege = estate_nobles_rural_gov_1
				has_estate_privilege = estate_nobles_rural_gov_2
				has_estate_privilege = estate_nobles_rural_gov_3
				has_estate_privilege = estate_nobles_rural_gov_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = rural_gov_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_rural_gov_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		development_cost = -0.05
		build_cost = -0.05
		build_time = -0.1
	}
 	penalties = { 
		state_governing_cost = 0.5
	}
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_tenancy_0 = {
	icon = estate_nobles_tenancy_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_tenancy_1
				has_estate_privilege = estate_nobles_tenancy_2
				has_estate_privilege = estate_nobles_tenancy_3
				has_estate_privilege = estate_nobles_tenancy_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = tenancy_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_tenancy_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		build_cost = -0.1
		infantry_cost = -0.1
	}
 	penalties = { 
		global_trade_goods_size_modifier = -0.1
		yearly_innovativeness = -0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_tenancy_1 = {
	icon = estate_nobles_tenancy_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_tenancy_0
				has_estate_privilege = estate_nobles_tenancy_2
				has_estate_privilege = estate_nobles_tenancy_3
				has_estate_privilege = estate_nobles_tenancy_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = tenancy_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_tenancy_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		yearly_innovativeness = -0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_tenancy_2 = {
	icon = estate_nobles_tenancy_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_tenancy_0
				has_estate_privilege = estate_nobles_tenancy_1
				has_estate_privilege = estate_nobles_tenancy_3
				has_estate_privilege = estate_nobles_tenancy_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = tenancy_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_tenancy_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_unrest = 1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_tenancy_3 = {
	icon = estate_nobles_tenancy_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_tenancy_0
				has_estate_privilege = estate_nobles_tenancy_1
				has_estate_privilege = estate_nobles_tenancy_2
				has_estate_privilege = estate_nobles_tenancy_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = tenancy_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_tenancy_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_trade_goods_size_modifier = 0.05
	}
 	penalties = { 
		state_governing_cost = 0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_tenancy_4 = {
	icon = estate_nobles_tenancy_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_tenancy_0
				has_estate_privilege = estate_nobles_tenancy_1
				has_estate_privilege = estate_nobles_tenancy_2
				has_estate_privilege = estate_nobles_tenancy_3 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = tenancy_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_tenancy_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_trade_goods_size_modifier = 0.1
		yearly_innovativeness = 0.05
	}
 	penalties = { 
		state_governing_cost = 0.25
		build_cost = 0.1
		infantry_cost = 0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_mil_auth_0 = {
	icon = estate_nobles_mil_auth_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_1
				has_estate_privilege = estate_nobles_mil_auth_2
				has_estate_privilege = estate_nobles_mil_auth_3 
				has_estate_privilege = estate_nobles_mil_auth_4 
				has_estate_privilege = estate_nobles_mil_auth_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		land_maintenance_modifier = -0.15
		regiment_manpower_usage = -0.1
	}
 	penalties = { 
		fire_damage_received = 0.25
		capped_by_forcelimit = yes
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_mil_auth_1 = {
	icon = estate_nobles_mil_auth_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_0
				has_estate_privilege = estate_nobles_mil_auth_2
				has_estate_privilege = estate_nobles_mil_auth_3 
				has_estate_privilege = estate_nobles_mil_auth_4 
				has_estate_privilege = estate_nobles_mil_auth_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		land_maintenance_modifier = -0.05
	}
 	penalties = { 
		fire_damage_received = 0.15
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_mil_auth_2 = {
	icon = estate_nobles_mil_auth_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_0
				has_estate_privilege = estate_nobles_mil_auth_1
				has_estate_privilege = estate_nobles_mil_auth_3 
				has_estate_privilege = estate_nobles_mil_auth_4 
				has_estate_privilege = estate_nobles_mil_auth_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		fire_damage_received = 0.05
	}  
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_mil_auth_3 = {
	icon = estate_nobles_mil_auth_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_0
				has_estate_privilege = estate_nobles_mil_auth_1
				has_estate_privilege = estate_nobles_mil_auth_2 
				has_estate_privilege = estate_nobles_mil_auth_4 
				has_estate_privilege = estate_nobles_mil_auth_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_mil_auth_4 = {
	icon = estate_nobles_mil_auth_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_0
				has_estate_privilege = estate_nobles_mil_auth_1
				has_estate_privilege = estate_nobles_mil_auth_2
				has_estate_privilege = estate_nobles_mil_auth_3  
				has_estate_privilege = estate_nobles_mil_auth_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_mil_auth_5 = {
	icon = estate_nobles_mil_auth_VI
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_mil_auth_0
				has_estate_privilege = estate_nobles_mil_auth_1
				has_estate_privilege = estate_nobles_mil_auth_2
				has_estate_privilege = estate_nobles_mil_auth_3 
				has_estate_privilege = estate_nobles_mil_auth_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = mil_auth_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_mil_auth_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		free_land_leader_pool = 1
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_privs_0 = {
	icon = estate_nobles_priv_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_privs_1
				has_estate_privilege = estate_nobles_privs_2
				has_estate_privilege = estate_nobles_privs_3 
				has_estate_privilege = estate_nobles_privs_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_priv_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_privs_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_autonomy = 0.25
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_privs_1 = {
	icon = estate_nobles_priv_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_privs_0
				has_estate_privilege = estate_nobles_privs_2
				has_estate_privilege = estate_nobles_privs_3 
				has_estate_privilege = estate_nobles_privs_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_priv_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_privs_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_autonomy = 0.2
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_privs_2 = {
	icon = estate_nobles_priv_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_privs_0
				has_estate_privilege = estate_nobles_privs_1
				has_estate_privilege = estate_nobles_privs_3 
				has_estate_privilege = estate_nobles_privs_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_priv_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_privs_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_autonomy = 0.15
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_privs_3 = {
	icon = estate_nobles_priv_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_privs_0
				has_estate_privilege = estate_nobles_privs_1
				has_estate_privilege = estate_nobles_privs_2 
				has_estate_privilege = estate_nobles_privs_4 
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_priv_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_privs_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_autonomy = 0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_privs_4 = {
	icon = estate_nobles_priv_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_privs_0
				has_estate_privilege = estate_nobles_privs_1
				has_estate_privilege = estate_nobles_privs_2
				has_estate_privilege = estate_nobles_privs_3  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_priv_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_privs_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_autonomy = 0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_oblig_0 = {
	icon = estate_nobles_oblig_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_2
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_5
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_autonomy = -0.025
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_1 = {
	icon = estate_nobles_oblig_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_2
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_5
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_tax_modifier = 0.1
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_2 = {
	icon = estate_nobles_oblig_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_5
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_trade_goods_size_modifier = 0.05
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_3 = {
	icon = estate_nobles_oblig_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_2  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_5
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_tax_modifier = 0.05
		manpower_recovery_speed = 0.1
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_4 = {
	icon = estate_nobles_oblig_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_2
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_5
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_tax_modifier = 0.1
		global_manpower_modifier = 0.15
		manpower_recovery_speed = 0.15
		land_forcelimit_modifier = 0.125
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_5 = {
	icon = estate_nobles_oblig_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_2
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_tax_modifier = 0.15
		global_manpower_modifier = 0.33
		manpower_recovery_speed = 0.25
		land_forcelimit_modifier = 0.25
	}
 	penalties = { 
		development_cost = 0.1
		global_trade_goods_size_modifier = -0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_oblig_6 = {
	icon = estate_nobles_oblig_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_oblig_0
				has_estate_privilege = estate_nobles_oblig_1
				has_estate_privilege = estate_nobles_oblig_2
				has_estate_privilege = estate_nobles_oblig_3  
				has_estate_privilege = estate_nobles_oblig_4
				has_estate_privilege = estate_nobles_oblig_5  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_oblig_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_oblig_6
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_tax_modifier = 0.2
		global_manpower_modifier = 0.67
		manpower_recovery_speed = 0.33
		land_forcelimit_modifier = 0.50
	}
 	penalties = { 
		development_cost = 0.25
		global_trade_goods_size_modifier = -0.25
	}  
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 #Privileges
 #
 
 estate_nobles_hierarchy_0 = {
	icon = estate_nobles_hier_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_2
				has_estate_privilege = estate_nobles_hierarchy_3  
				has_estate_privilege = estate_nobles_hierarchy_4
				has_estate_privilege = estate_nobles_hierarchy_5  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_1 = {
	icon = estate_nobles_hier_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_2
				has_estate_privilege = estate_nobles_hierarchy_3  
				has_estate_privilege = estate_nobles_hierarchy_4
				has_estate_privilege = estate_nobles_hierarchy_5  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_2 = {
	icon = estate_nobles_hier_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_3  
				has_estate_privilege = estate_nobles_hierarchy_4
				has_estate_privilege = estate_nobles_hierarchy_5  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_3 = {
	icon = estate_nobles_hier_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_2  
				has_estate_privilege = estate_nobles_hierarchy_4
				has_estate_privilege = estate_nobles_hierarchy_5  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_4 = {
	icon = estate_nobles_hier_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_2
				has_estate_privilege = estate_nobles_hierarchy_3
				has_estate_privilege = estate_nobles_hierarchy_5  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_5 = {
	icon = estate_nobles_hier_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_2
				has_estate_privilege = estate_nobles_hierarchy_3  
				has_estate_privilege = estate_nobles_hierarchy_4  
				has_estate_privilege = estate_nobles_hierarchy_6  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_hierarchy_6 = {
	icon = estate_nobles_hier_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_hierarchy_0
				has_estate_privilege = estate_nobles_hierarchy_1
				has_estate_privilege = estate_nobles_hierarchy_2
				has_estate_privilege = estate_nobles_hierarchy_3  
				has_estate_privilege = estate_nobles_hierarchy_4
				has_estate_privilege = estate_nobles_hierarchy_5  
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_hier_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_hierarchy_6
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_inherit_0 = {
	icon = estate_nobles_inherit_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_1
				has_estate_privilege = estate_nobles_inherit_2
				has_estate_privilege = estate_nobles_inherit_3
				has_estate_privilege = estate_nobles_inherit_4
				has_estate_privilege = estate_nobles_inherit_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		stability_cost_modifier = 0.15
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_inherit_1 = {
	icon = estate_nobles_inherit_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_0
				has_estate_privilege = estate_nobles_inherit_2
				has_estate_privilege = estate_nobles_inherit_3
				has_estate_privilege = estate_nobles_inherit_4
				has_estate_privilege = estate_nobles_inherit_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		stability_cost_modifier = 0.075
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_inherit_2 = {
	icon = estate_nobles_inherit_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_0
				has_estate_privilege = estate_nobles_inherit_1
				has_estate_privilege = estate_nobles_inherit_3
				has_estate_privilege = estate_nobles_inherit_4
				has_estate_privilege = estate_nobles_inherit_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_inherit_3 = {
	icon = estate_nobles_inherit_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_0
				has_estate_privilege = estate_nobles_inherit_1
				has_estate_privilege = estate_nobles_inherit_2
				has_estate_privilege = estate_nobles_inherit_4
				has_estate_privilege = estate_nobles_inherit_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		stability_cost_modifier = -0.05
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_inherit_4 = {
	icon = estate_nobles_inherit_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_0
				has_estate_privilege = estate_nobles_inherit_1
				has_estate_privilege = estate_nobles_inherit_2
				has_estate_privilege = estate_nobles_inherit_3
				has_estate_privilege = estate_nobles_inherit_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		stability_cost_modifier = -0.1
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_inherit_5 = {
	icon = estate_nobles_inherit_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_inherit_0
				has_estate_privilege = estate_nobles_inherit_1
				has_estate_privilege = estate_nobles_inherit_2
				has_estate_privilege = estate_nobles_inherit_3
				has_estate_privilege = estate_nobles_inherit_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_inherit_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_inherit_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_autonomy = -0.1
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
  #
 
 estate_nobles_titles_0 = {
	icon = estate_nobles_titles_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_titles_1
				has_estate_privilege = estate_nobles_titles_2
				has_estate_privilege = estate_nobles_titles_3  
				has_estate_privilege = estate_nobles_titles_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_titles_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_titles_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		prestige_decay = -0.005
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_titles_1 = {
	icon = estate_nobles_titles_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_titles_0
				has_estate_privilege = estate_nobles_titles_2
				has_estate_privilege = estate_nobles_titles_3  
				has_estate_privilege = estate_nobles_titles_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_titles_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_titles_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_titles_2 = {
	icon = estate_nobles_titles_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_titles_0
				has_estate_privilege = estate_nobles_titles_1
				has_estate_privilege = estate_nobles_titles_3  
				has_estate_privilege = estate_nobles_titles_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_titles_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_titles_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_titles_3 = {
	icon = estate_nobles_titles_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_titles_0
				has_estate_privilege = estate_nobles_titles_1
				has_estate_privilege = estate_nobles_titles_2  
				has_estate_privilege = estate_nobles_titles_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_titles_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_titles_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		prestige_decay = 0.005
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_titles_4 = {
	icon = estate_nobles_titles_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_titles_0
				has_estate_privilege = estate_nobles_titles_1
				has_estate_privilege = estate_nobles_titles_2
				has_estate_privilege = estate_nobles_titles_3
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_titles_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_titles_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		prestige_decay = 0.01
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_appoint_0 = {
	icon = estate_nobles_fam_appoint_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_1
				has_estate_privilege = estate_nobles_appoint_2
				has_estate_privilege = estate_nobles_appoint_3
				has_estate_privilege = estate_nobles_appoint_4
				has_estate_privilege = estate_nobles_appoint_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		global_autonomy = -0.25
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_appoint_1 = {
	icon = estate_nobles_fam_appoint_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_0
				has_estate_privilege = estate_nobles_appoint_2
				has_estate_privilege = estate_nobles_appoint_3
				has_estate_privilege = estate_nobles_appoint_4
				has_estate_privilege = estate_nobles_appoint_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_appoint_2 = {
	icon = estate_nobles_fam_appoint_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_0
				has_estate_privilege = estate_nobles_appoint_1
				has_estate_privilege = estate_nobles_appoint_3
				has_estate_privilege = estate_nobles_appoint_4
				has_estate_privilege = estate_nobles_appoint_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_appoint_3 = {
	icon = estate_nobles_fam_appoint_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_0
				has_estate_privilege = estate_nobles_appoint_1
				has_estate_privilege = estate_nobles_appoint_2
				has_estate_privilege = estate_nobles_appoint_4
				has_estate_privilege = estate_nobles_appoint_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		yearly_corruption = 0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_appoint_4 = {
	icon = estate_nobles_fam_appoint_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_0
				has_estate_privilege = estate_nobles_appoint_1
				has_estate_privilege = estate_nobles_appoint_2
				has_estate_privilege = estate_nobles_appoint_3
				has_estate_privilege = estate_nobles_appoint_5
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		yearly_corruption = 0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_appoint_5 = {
	icon = estate_nobles_fam_appoint_VI
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_appoint_0
				has_estate_privilege = estate_nobles_appoint_1
				has_estate_privilege = estate_nobles_appoint_2
				has_estate_privilege = estate_nobles_appoint_3
				has_estate_privilege = estate_nobles_appoint_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_appoint_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_appoint_5
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_fish_game_0 = {
	icon = estate_nobles_fish_game_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_fish_game_1
				has_estate_privilege = estate_nobles_fish_game_2
				has_estate_privilege = estate_nobles_fish_game_3
				has_estate_privilege = estate_nobles_fish_game_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = fish_game_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_fish_game_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_fish_game_1 = {
	icon = estate_nobles_fish_game_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_fish_game_0
				has_estate_privilege = estate_nobles_fish_game_2
				has_estate_privilege = estate_nobles_fish_game_3
				has_estate_privilege = estate_nobles_fish_game_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = fish_game_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_fish_game_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_fish_game_2 = {
	icon = estate_nobles_fish_game_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_fish_game_0
				has_estate_privilege = estate_nobles_fish_game_1
				has_estate_privilege = estate_nobles_fish_game_3
				has_estate_privilege = estate_nobles_fish_game_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = fish_game_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_fish_game_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		war_exhaustion = 0.01
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_fish_game_3 = {
	icon = estate_nobles_fish_game_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_fish_game_0
				has_estate_privilege = estate_nobles_fish_game_1
				has_estate_privilege = estate_nobles_fish_game_2
				has_estate_privilege = estate_nobles_fish_game_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = fish_game_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_fish_game_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		war_exhaustion = 0.02
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_fish_game_4 = {
	icon = estate_nobles_fish_game_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_fish_game_0
				has_estate_privilege = estate_nobles_fish_game_1
				has_estate_privilege = estate_nobles_fish_game_2
				has_estate_privilege = estate_nobles_fish_game_3
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = fish_game_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_fish_game_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		war_exhaustion = 0.03
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_forestry_0 = {
	icon = estate_nobles_forestry_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_forestry_1
				has_estate_privilege = estate_nobles_forestry_2
				has_estate_privilege = estate_nobles_forestry_3
				has_estate_privilege = estate_nobles_forestry_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_forest_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_forestry_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_forestry_1 = {
	icon = estate_nobles_forestry_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_forestry_0
				has_estate_privilege = estate_nobles_forestry_2
				has_estate_privilege = estate_nobles_forestry_3
				has_estate_privilege = estate_nobles_forestry_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_forest_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_forestry_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_forestry_2 = {
	icon = estate_nobles_forestry_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_forestry_0
				has_estate_privilege = estate_nobles_forestry_1
				has_estate_privilege = estate_nobles_forestry_3
				has_estate_privilege = estate_nobles_forestry_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_forest_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_forestry_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_ship_cost  = 0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_forestry_3 = {
	icon = estate_nobles_forestry_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_forestry_0
				has_estate_privilege = estate_nobles_forestry_1
				has_estate_privilege = estate_nobles_forestry_2
				has_estate_privilege = estate_nobles_forestry_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_forest_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_forestry_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_ship_cost = 0.1
		production_efficiency = -0.025
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_forestry_4 = {
	icon = estate_nobles_forestry_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_forestry_0
				has_estate_privilege = estate_nobles_forestry_1
				has_estate_privilege = estate_nobles_forestry_2
				has_estate_privilege = estate_nobles_forestry_3
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_forest_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_forestry_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_ship_cost = 0.2
		production_efficiency = -0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_processing_0 = {
	icon = estate_nobles_processing_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_processing_1
				has_estate_privilege = estate_nobles_processing_2
				has_estate_privilege = estate_nobles_processing_3
				has_estate_privilege = estate_nobles_processing_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_process_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_processing_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_processing_1 = {
	icon = estate_nobles_processing_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_processing_0
				has_estate_privilege = estate_nobles_processing_2
				has_estate_privilege = estate_nobles_processing_3
				has_estate_privilege = estate_nobles_processing_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_process_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_processing_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		production_efficiency = -0.025
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_processing_2 = {
	icon = estate_nobles_processing_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_processing_0
				has_estate_privilege = estate_nobles_processing_1
				has_estate_privilege = estate_nobles_processing_3
				has_estate_privilege = estate_nobles_processing_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_process_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_processing_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		production_efficiency = -0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_processing_3 = {
	icon = estate_nobles_processing_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_processing_0
				has_estate_privilege = estate_nobles_processing_1
				has_estate_privilege = estate_nobles_processing_2
				has_estate_privilege = estate_nobles_processing_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_process_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_processing_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		production_efficiency = -0.075
		development_cost = 0.025
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_processing_4 = {
	icon = estate_nobles_processing_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_processing_0
				has_estate_privilege = estate_nobles_processing_1
				has_estate_privilege = estate_nobles_processing_2
				has_estate_privilege = estate_nobles_processing_3
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_process_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_processing_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		production_efficiency = -0.15
		development_cost = 0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 #
 
 estate_nobles_patronage_0 = {
	icon = estate_nobles_patronage_I
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_patronage_1
				has_estate_privilege = estate_nobles_patronage_2
				has_estate_privilege = estate_nobles_patronage_3
				has_estate_privilege = estate_nobles_patronage_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_patron_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_patronage_0
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_patronage_1 = {
	icon = estate_nobles_patronage_II
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_patronage_0
				has_estate_privilege = estate_nobles_patronage_2
				has_estate_privilege = estate_nobles_patronage_3
				has_estate_privilege = estate_nobles_patronage_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_patron_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_patronage_1
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_tax_modifier = -0.025
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_patronage_2 = {
	icon = estate_nobles_patronage_III
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_patronage_0
				has_estate_privilege = estate_nobles_patronage_1
				has_estate_privilege = estate_nobles_patronage_3
				has_estate_privilege = estate_nobles_patronage_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_patron_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_patronage_2
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_tax_modifier = -0.05
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_patronage_3 = {
	icon = estate_nobles_patronage_IV
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_patronage_0
				has_estate_privilege = estate_nobles_patronage_1
				has_estate_privilege = estate_nobles_patronage_2
				has_estate_privilege = estate_nobles_patronage_4
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_patron_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_patronage_3
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_tax_modifier = -0.075
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 
 estate_nobles_patronage_4 = {
	icon = estate_nobles_patronage_V
	max_absolutism = 0
	loyalty = 0
	influence = 0
	land_share = 0
	cooldown_years = 0
 	is_valid = { 
		NOT = { 
			OR = {
				has_estate_privilege = estate_nobles_patronage_0
				has_estate_privilege = estate_nobles_patronage_1
				has_estate_privilege = estate_nobles_patronage_2
				has_estate_privilege = estate_nobles_patronage_3
			}
		}
	}					
 	can_select = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country is allowed to select the privilege (with conditions for why not displayed)
 	on_granted = { } 					#Effects executed immediately upon the privilege being taken
 	can_revoke = { ai = no hidden_trigger = { NOT = { has_country_flag = no_estate_select } } } 					#Conditions for whether the country can revoke the privilege
 	on_revoked = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_country_flag = no_estate_select } }
				set_country_flag = noble_patron_window 
				set_country_flag = no_estate_select 
				set_country_flag = estate_nobles_patronage_4
				country_event = { id = AN_estate_reassign.1 days = 0 } 
			}			
		}
	}
 	on_invalid = { } 					#Effects executed upon the privilege being removed due to invalidity (is_valid becomes false or the estate is removed)
 	benefits = { 
		
	}
 	penalties = { 
		global_tax_modifier = -0.1
	} 
 	#conditional_modifier = { 					#Modifier that are applied if the specified conditions are true.
 	#	trigger = { }
 	#	modifier = { }
 	#	is_bad = no							#Specifies whether the modifier should be listed as positive or negative in the tooltips.
 	#}
	#loyalty_scaled_conditional_modifier = {		#Modifier that are applied if the specified conditions are true. At 100% Loyalty you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
	#influence_scaled_conditional_modifier = {	#Modifier that are applied if the specified conditions are true. At 100% Influence you gain 100% of the modifier.
	#	trigger = { }
	#	modifier = { }
	#}
 	modifier_by_land_ownership = { } 	#Multiplies the modifier by the % of land owned by the estate.
 	mechanics = { } 					#Special mechanics the privilege enables
 	on_cooldown_expires = { }			#Effect executed once the specified cooldown_years timer has run down
	ai_will_do = {
		factor = 1
	}
 }
 