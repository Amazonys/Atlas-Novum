# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
custom_button = {
    name = AN_core_color_toggle #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
    trigger = { hidden_trigger = { always = yes } } #Determines when the button is clickable
    effect = {
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = AN_core_subject_color } }
				every_country = {
					if = {
						limit = { is_subject = no has_country_flag = has_overriden_color_flag }
						restore_country_color = yes
						clr_country_flag = has_overriden_color_flag
					}
					else = {
						if = {
							limit = { 
								OR = {
									#Core
									is_subject_of_type = personal_union
									is_subject_of_type = dominion
									is_subject_of_type = confederate
									is_subject_of_type = fief
									is_subject_of_type = daimyo_vassal
									#
									is_subject_of_type = appanage # to be removed
									is_subject_of_type = core_eyalet # to be removed
									is_subject_of_type = pronoia_subject_type # to be removed
									#Vassal
								#	is_subject_of_type = vassal
								#	is_subject_of_type = march
								#	is_subject_of_type = trade_protectorate
									#
								#	is_subject_of_type = eyalet # to be removed
								#	is_subject_of_type = hereditary_pronoia_subject_type # to be removed
									#
								#	is_subject_of_type = client_vassal
								#	is_subject_of_type = client_march
									#
								#	is_subject_of_type = colony
								#	is_subject_of_type = crown_colony
								#	is_subject_of_type = private_enterprise
								#	is_subject_of_type = self_governing_colony
									#Sphere
								#	is_subject_of_type = commercial_enterprise
								#	is_subject_of_type = tributary_state
								#	is_subject_of_type = paramountcy
									#
								#	is_subject_of_type = cultural_sphere_of_influence_subject # to be removed	
								}
							}
							if = {
								limit = { overlord = { is_subject = no } }
								overlord = { save_event_target_as = AN_color_target }
								change_country_color = { country = event_target:AN_color_target }
								set_country_flag = has_overriden_color_flag
							}
							else_if = {
								limit = {
									overlord = {
										is_subject = yes
									}
								}
								if = {
									limit = { overlord = { overlord = { is_subject = no } } }
									overlord = { overlord = { save_event_target_as = AN_color_target } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
								else_if = {
									limit = {
										overlord = {
											overlord = {
												is_subject = yes
											}
										}
									}
									overlord = { overlord = { overlord = { save_event_target_as = AN_color_target } } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
							}
						}
					}
				}
				set_global_flag = AN_core_subject_color
			}	
			else = {
				every_country = {
					limit = {
						is_subject = yes
						OR = {
							#Core
							is_subject_of_type = personal_union
							is_subject_of_type = dominion
							is_subject_of_type = confederate
							is_subject_of_type = fief
							is_subject_of_type = daimyo_vassal
							#
						#	is_subject_of_type = appanage # to be removed
						#	is_subject_of_type = core_eyalet # to be removed
						#	is_subject_of_type = pronoia_subject_type # to be removed
							#Vassal
						#	is_subject_of_type = vassal
						#	is_subject_of_type = march
						#	is_subject_of_type = trade_protectorate
							#
						#	is_subject_of_type = eyalet # to be removed
						#	is_subject_of_type = hereditary_pronoia_subject_type # to be removed
							#
						#	is_subject_of_type = client_vassal
						#	is_subject_of_type = client_march
							#
						#	is_subject_of_type = colony
						#	is_subject_of_type = crown_colony
						#	is_subject_of_type = private_enterprise
						#	is_subject_of_type = self_governing_colony
							#Sphere
						#	is_subject_of_type = commercial_enterprise
						#	is_subject_of_type = tributary_state
						#	is_subject_of_type = paramountcy
							#
						#	is_subject_of_type = cultural_sphere_of_influence_subject # to be removed
						}
					}
					restore_country_color = yes
					clr_country_flag = has_overriden_color_flag
					
				}
				clr_global_flag = AN_core_subject_color
			}
		}
	} #Effect
    tooltip = AN_core_color_tooltip #Can use customizable localisation

	frame = { 
        number = 1
        trigger = { 
			NOT = { has_global_flag = AN_core_subject_color }
		} 
    }
	frame = { 
        number = 2
        trigger = { 
			has_global_flag = AN_core_subject_color
		} 
    }
}

custom_button = {
    name = AN_vassal_color_toggle #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
    trigger = { hidden_trigger = { always = yes } } #Determines when the button is clickable
    effect = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = AN_vassal_subject_color } }
				every_country = {
					if = {
						limit = { is_subject = no has_country_flag = has_overriden_color_flag }
						restore_country_color = yes
						clr_country_flag = has_overriden_color_flag
					}
					else = {
						if = {
							limit = { 
								OR = {
									#Core
								#	is_subject_of_type = personal_union
								#	is_subject_of_type = dominion
								#	is_subject_of_type = confederate
								#	is_subject_of_type = fief
								#	is_subject_of_type = daimyo_vassal
									#
								#	is_subject_of_type = appanage # to be removed
								#	is_subject_of_type = core_eyalet # to be removed
								#	is_subject_of_type = pronoia_subject_type # to be removed
									#Vassal
									is_subject_of_type = vassal
									is_subject_of_type = march
									is_subject_of_type = trade_protectorate
									#
									is_subject_of_type = eyalet # to be removed
									is_subject_of_type = hereditary_pronoia_subject_type # to be removed
									#
									is_subject_of_type = client_vassal
									is_subject_of_type = client_march
									#
									is_subject_of_type = colony
									is_subject_of_type = crown_colony
									is_subject_of_type = private_enterprise
									is_subject_of_type = self_governing_colony
									#Sphere
								#	is_subject_of_type = commercial_enterprise
								#	is_subject_of_type = tributary_state
								#	is_subject_of_type = paramountcy
									#
								#	is_subject_of_type = cultural_sphere_of_influence_subject # to be removed	
								}
							}
							if = {
								limit = { overlord = { is_subject = no } }
								overlord = { save_event_target_as = AN_color_target }
								change_country_color = { country = event_target:AN_color_target }
								set_country_flag = has_overriden_color_flag
							}
							else_if = {
								limit = {
									overlord = {
										is_subject = yes
									}
								}
								if = {
									limit = { overlord = { overlord = { is_subject = no } } }
									overlord = { overlord = { save_event_target_as = AN_color_target } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
								else_if = {
									limit = {
										overlord = {
											overlord = {
												is_subject = yes
											}
										}
									}
									overlord = { overlord = { overlord = { save_event_target_as = AN_color_target } } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
							}
						}
					}
				}
				set_global_flag = AN_vassal_subject_color
			}	
			else = {
				every_country = {
					limit = {
						is_subject = yes
						OR = {
							#Core
						#	is_subject_of_type = personal_union
						#	is_subject_of_type = dominion
						#	is_subject_of_type = confederate
						#	is_subject_of_type = fief
						#	is_subject_of_type = daimyo_vassal
							#
						#	is_subject_of_type = appanage # to be removed
						#	is_subject_of_type = core_eyalet # to be removed
						#	is_subject_of_type = pronoia_subject_type # to be removed
							#Vassal
							is_subject_of_type = vassal
							is_subject_of_type = march
							is_subject_of_type = trade_protectorate
							#
							is_subject_of_type = eyalet # to be removed
							is_subject_of_type = hereditary_pronoia_subject_type # to be removed
							#
							is_subject_of_type = client_vassal
							is_subject_of_type = client_march
							#
							is_subject_of_type = colony
							is_subject_of_type = crown_colony
							is_subject_of_type = private_enterprise
							is_subject_of_type = self_governing_colony
							#Sphere
						#	is_subject_of_type = commercial_enterprise
						#	is_subject_of_type = tributary_state
						#	is_subject_of_type = paramountcy
							#
						#	is_subject_of_type = cultural_sphere_of_influence_subject # to be removed
						}
					}
					restore_country_color = yes
					clr_country_flag = has_overriden_color_flag
					
				}
				clr_global_flag = AN_vassal_subject_color
			}
		}
	} #Effect
    tooltip = AN_vassal_color_tooltip #Can use customizable localisation

	frame = { 
        number = 1
        trigger = { 
			NOT = { has_global_flag = AN_vassal_subject_color }
		} 
    }
	frame = { 
        number = 2
        trigger = { 
			has_global_flag = AN_vassal_subject_color
		} 
    }
}

custom_button = {
    name = AN_sphere_color_toggle #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
    trigger = { hidden_trigger = { always = yes } } #Determines when the button is clickable
    effect = { 
		hidden_effect = {
			if = {
				limit = { NOT = { has_global_flag = AN_sphere_subject_color } }
				every_country = {
					if = {
						limit = { is_subject = no has_country_flag = has_overriden_color_flag }
						restore_country_color = yes
						clr_country_flag = has_overriden_color_flag
					}
					else = {
						if = {
							limit = { 
								OR = {
									#Core
								#	is_subject_of_type = personal_union
								#	is_subject_of_type = dominion
								#	is_subject_of_type = confederate
								#	is_subject_of_type = fief
								#	is_subject_of_type = daimyo_vassal
									#
								#	is_subject_of_type = appanage # to be removed
								#	is_subject_of_type = core_eyalet # to be removed
								#	is_subject_of_type = pronoia_subject_type # to be removed
									#Vassal
								#	is_subject_of_type = vassal
								#	is_subject_of_type = march
								#	is_subject_of_type = trade_protectorate
									#
								#	is_subject_of_type = eyalet # to be removed
								#	is_subject_of_type = hereditary_pronoia_subject_type # to be removed
									#
								#	is_subject_of_type = client_vassal
								#	is_subject_of_type = client_march
									#
								#	is_subject_of_type = colony
								#	is_subject_of_type = crown_colony
								#	is_subject_of_type = private_enterprise
								#	is_subject_of_type = self_governing_colony
									#Sphere
									is_subject_of_type = commercial_enterprise
									is_subject_of_type = tributary_state
									is_subject_of_type = paramountcy
									#
									#is_subject_of_type = cultural_sphere_of_influence_subject # to be removed	
								}
							}
							if = {
								limit = { overlord = { is_subject = no } }
								overlord = { save_event_target_as = AN_color_target }
								change_country_color = { country = event_target:AN_color_target }
								set_country_flag = has_overriden_color_flag
							}
							else_if = {
								limit = {
									overlord = {
										is_subject = yes
									}
								}
								if = {
									limit = { overlord = { overlord = { is_subject = no } } }
									overlord = { overlord = { save_event_target_as = AN_color_target } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
								else_if = {
									limit = {
										overlord = {
											overlord = {
												is_subject = yes
											}
										}
									}
									overlord = { overlord = { overlord = { save_event_target_as = AN_color_target } } }
									change_country_color = { country = event_target:AN_color_target }
									set_country_flag = has_overriden_color_flag
								}
							}
						}
					}
				}
				set_global_flag = AN_sphere_subject_color
			}	
			else = {
				every_country = {
					limit = {
						is_subject = yes
						OR = {
							#Core
						#	is_subject_of_type = personal_union
						#	is_subject_of_type = dominion
						#	is_subject_of_type = confederate
						#	is_subject_of_type = fief
						#	is_subject_of_type = daimyo_vassal
							#
						#	is_subject_of_type = appanage # to be removed
						#	is_subject_of_type = core_eyalet # to be removed
						#	is_subject_of_type = pronoia_subject_type # to be removed
							#Vassal
						#	is_subject_of_type = vassal
						#	is_subject_of_type = march
						#	is_subject_of_type = trade_protectorate
							#
						#	is_subject_of_type = eyalet # to be removed
						#	is_subject_of_type = hereditary_pronoia_subject_type # to be removed
							#
						#	is_subject_of_type = client_vassal
						#	is_subject_of_type = client_march
							#
						#	is_subject_of_type = colony
						#	is_subject_of_type = crown_colony
						#	is_subject_of_type = private_enterprise
						#	is_subject_of_type = self_governing_colony
							#Sphere
							is_subject_of_type = commercial_enterprise
							is_subject_of_type = tributary_state
							is_subject_of_type = paramountcy
							#
							#is_subject_of_type = cultural_sphere_of_influence_subject # to be removed
						}
					}
					restore_country_color = yes
					clr_country_flag = has_overriden_color_flag
					
				}
				clr_global_flag = AN_sphere_subject_color
			}
		}
	} #Effect
    tooltip = AN_sphere_color_tooltip #Can use customizable localisation

	frame = { 
        number = 1
        trigger = { 
			NOT = { has_global_flag = AN_sphere_subject_color }
		} 
    }
	frame = { 
        number = 2
        trigger = { 
			has_global_flag = AN_sphere_subject_color
		} 
    }
}