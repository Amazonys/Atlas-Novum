# The custom guiButtonType/instantTextBoxType/iconType must have a 'scripted = yes' line to work
custom_icon = {
    name = estate_1x3 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_1x4 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_1x5 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_1x6 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_1x7 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_1x8 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x3 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x4 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x5 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x6 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x7 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_icon = {
    name = estate_2x8 #Must match a scripted guiButtonType in a .gui file
    potential = { always = yes } #Determines when the button is visible
   # tooltip = AN_population_tooltip #Can use customizable localisation
}
custom_button = {
    name = close_selector 
    tooltip = "Close" 
    potential = { FROM = {  ai = no  } }
	trigger = { hidden_trigger = { always = yes } }
	effect = {
		clr_country_flag = no_estate_select
		trigger_switch = {
			on_trigger = has_country_flag
			regal_auth_window = { clr_country_flag = regal_auth_window }
			crown_rev_window = { clr_country_flag = crown_rev_window }
			court_prestige_window = { clr_country_flag = court_prestige_window }
			court_advisors_window = { clr_country_flag = court_advisors_window }
			court_politics_window = { clr_country_flag = court_politics_window }
			court_hier_window = { clr_country_flag = court_hier_window }
			court_prerog_window = { clr_country_flag = court_prerog_window }
			court_appoint_window = { clr_country_flag = court_appoint_window }
			court_titles_window = { clr_country_flag = court_titles_window }
			court_foreign_window = { clr_country_flag = court_foreign_window }
			court_fam_service_window = { clr_country_flag = court_fam_service_window }
			court_patronage_window = { clr_country_flag = court_patronage_window }
			court_mint_window = { clr_country_flag = court_mint_window }
			court_charters_window = { clr_country_flag = court_charters_window }
			court_salt_window = { clr_country_flag = court_salt_window }
			#
			rev_collect_window = { clr_country_flag = rev_collect_window }
			central_admin_window = { clr_country_flag = central_admin_window }
			local_admin_window = { clr_country_flag = local_admin_window }
			leg_app_window = { clr_country_flag = leg_app_window }
			prov_justice_window = { clr_country_flag = prov_justice_window }
			bureau_hier_window = { clr_country_flag = bureau_hier_window }
			bureau_oversight_window = { clr_country_flag = bureau_oversight_window }
			b_politicization_window = { clr_country_flag = b_politicization_window }
			bureau_recruit_window = { clr_country_flag = bureau_recruit_window }
			bureau_tenure_window = { clr_country_flag = bureau_tenure_window }
			bureau_office_window = { clr_country_flag = bureau_office_window }
			bureau_wages_window = { clr_country_flag = bureau_wages_window }
			econ_reg_window = { clr_country_flag = econ_reg_window }
			bureau_mint_window = { clr_country_flag = bureau_mint_window }
			bureau_bank_window = { clr_country_flag = bureau_bank_window }
			#
			mil_funding_window = { clr_country_flag = mil_funding_window }
			mil_service_window = { clr_country_flag = mil_service_window }
			army_org_window = { clr_country_flag = army_org_window }
			navy_org_window = { clr_country_flag = navy_org_window }
			navy_req_window = { clr_country_flag = navy_req_window }
			mil_hier_window = { clr_country_flag = mil_hier_window }
			mil_oversight_window = { clr_country_flag = mil_oversight_window }
			officer_ed_window = { clr_country_flag = officer_ed_window }
			mil_discipline_window = { clr_country_flag = mil_discipline_window }
			mil_commission_window = { clr_country_flag = mil_commission_window }
			mil_wages_window = { clr_country_flag = mil_wages_window }
			mil_mobil_window = { clr_country_flag = mil_mobil_window }
			mil_ready_window = { clr_country_flag = mil_ready_window }
			mil_forts_window = { clr_country_flag = mil_forts_window }
			navy_rec_window = { clr_country_flag = navy_rec_window }
			#
			spirit_auth_window = { clr_country_flag = spirit_auth_window }
			temp_auth_window = { clr_country_flag = temp_auth_window }
			church_admin_window = { clr_country_flag = church_admin_window }
			church_fin_window = { clr_country_flag = church_fin_window }
			church_oblig_window = { clr_country_flag = church_oblig_window }
			church_hier_window = { clr_country_flag = church_hier_window }
			church_lands_window = { clr_country_flag = church_lands_window }
			church_ed_window = { clr_country_flag = church_ed_window }
			church_appoint_window = { clr_country_flag = church_appoint_window }
			church_monastery_window = { clr_country_flag = church_monastery_window }
			proselytism_window = { clr_country_flag = proselytism_window }
			church_charity_window = { clr_country_flag = church_charity_window }
			church_patron_window = { clr_country_flag = church_patron_window }
			#
			rural_gov_window = { clr_country_flag = rural_gov_window }
			tenancy_window = { clr_country_flag = tenancy_window }
			mil_auth_window = { clr_country_flag = mil_auth_window }
			noble_priv_window = { clr_country_flag = noble_priv_window }
			noble_oblig_window = { clr_country_flag = noble_oblig_window }
			noble_hier_window = { clr_country_flag = noble_hier_window }
			noble_titles_window = { clr_country_flag = noble_titles_window }
			noble_inherit_window = { clr_country_flag = noble_inherit_window }
			noble_patron_window = { clr_country_flag = noble_patron_window }
			noble_appoint_window = { clr_country_flag = noble_appoint_window }
			fish_game_window = { clr_country_flag = fish_game_window }
			noble_forest_window = { clr_country_flag = noble_forest_window }
			noble_process_window = { clr_country_flag = noble_process_window }
			#
			urban_gov_window = { clr_country_flag = urban_gov_window }
			com_law_window = { clr_country_flag = com_law_window }
			prof_trade_window = { clr_country_flag = prof_trade_window }
			fin_inst_window = { clr_country_flag = fin_inst_window }
			marine_window = { clr_country_flag = marine_window }
			burgher_hier_window = { clr_country_flag = burgher_hier_window }
			burgher_bank_window = { clr_country_flag = burgher_bank_window }
			burgher_inherit_window = { clr_country_flag = burgher_inherit_window }
			burgher_assembly_window = { clr_country_flag = burgher_assembly_window }
			burgher_patron_window = { clr_country_flag = burgher_patron_window }
			burgher_charter_window = { clr_country_flag = burgher_charter_window }
			burgher_slave_window = { clr_country_flag = burgher_slave_window }
			burgher_privateer_window = { clr_country_flag = burgher_privateer_window }
		}
	}
}
