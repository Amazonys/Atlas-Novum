# Adds a special "Force Border Changes" treaty in case that the original war target is no longer the war leader.
#po_force_border_changes = {
#	category = 6
#	power_projection = humiliated_rival
#	power_cost_base = 0.0
#	prestige_base = 1.0 # Base factor for prestige gain and loss. Scales with war score cost.
#	ae_base = 0.0
#	warscore_cost = {
#		# Which of the giver's provinces' war score costs are included and by how much. All entries default to 0. Any combination of entries can be used. Try negative values at your own risk.
#		all_provinces = 0.0 # All the giver's provinces
#		no_provinces = 10.0 # This is just a constant. Equivalent to a single province with with war score cost 1
#		owner_keeps = 0.0 # The provinces that are not of any of the types below
#		conquered = 0.0 # Provinces that are selected by a Demand Province treaty
#		returned_core = 0.0 # Provinces that are selected by a Return Core treaty
#		released_nation = 0.0 # Provinces that will become a part of a selected released-to-be nation
#		cancelled_subject = 0.0 # This one should not be relevant here since Giver can't be a cancelled subject. Including anyway for completeness
#		concede_colonial_region = 0.0 # Ditto
#	}
#	warscore_cap = 10 # Warscore cost will never go above this value. Only enabled if non-negative. This value defaults to -1.
#	requires_demand_independence = yes # Whether this can be demanded by the former subject in an independence war without also demanding independence.
#	is_make_subject = yes # This will make the treaty mutually exclusive with other treaties that makes the giver a subject, or that explicitly frees the giver from their current overlord.
#	requires_is_allowed = yes # If set to "yes", treaty will only be visible when explicitly allowed by casus belli. If not, it will be available but cost diplomatic power.
#	
#	is_visible = { # Defaults to equivalent of "always = yes"
#		# FROM = { NOT = { has_country_flag = got_invasion_cb_fabricated_by_@ROOT } }
#	}
#	is_allowed = { # Defaults to equivalent of "always = yes"
#		always = yes
#	}
#	effect = { # Defaults to empty effect (which makes error log entry but is safe)
#		add_prestige = 20
#		FROM = { add_prestige = -20 }
#	}
#	ai_weight = { # Defaults to always evaluate to 0
#		export_to_variable = {
#			variable_name = ai_value # Mandatory to have entry called "ai_value". Its value at the end of the ai_weight scope is what will be used
#			value = 50
#		}
#	}
#}