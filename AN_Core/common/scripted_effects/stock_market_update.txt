release_update_setup = {
	#For displaying history
	set_variable = {
		which = history_stock_market_demand_for_$trade_good_id$
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}
	set_variable = {
		which = history_stock_market_supply_for_$trade_good_id$
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	set_variable = {
		which = history_stock_market_balance_for_$trade_good_id$
		which = history_stock_market_supply_for_$trade_good_id$
	}
	subtract_variable = {
		which = history_stock_market_balance_for_$trade_good_id$
		which = history_stock_market_demand_for_$trade_good_id$
	}
	#set_variable = {
	#	which = history_stock_market_stockpile_for_$trade_good_id$
	#	which = country_stock_market_stockpile_for_$trade_good_id$
	#}
	set_variable = {
		which = history_last_month_income_from_$trade_good_id$
		which = last_month_income_from_$trade_good_id$
	}


	set_variable = {
		which = stock_market_demand_for_$trade_good_id$
		value = 0
	}
	set_variable = {
		which = country_stock_market_supply_for_$trade_good_id$
		value = 0
	}
}

post_province_evaluation = {
	#We get country_stock_market_supply_for_$trade_good_id$ from those functions
	#Here we determine how much we sell globally

	
	#For localisation
	set_variable = {
		which = country_total_stock_market_supply_for_$trade_good_id$ 
		which = country_stock_market_supply_for_$trade_good_id$
	}

	#This one is redundant but I want it to be safe and unchanged
	set_variable = {
		which = country_total_stock_market_demand_for_$trade_good_id$ 
		which = stock_market_demand_for_$trade_good_id$
	}

	#Balance for localisation, also maybe later for calculations?
	set_variable = {
		which = country_total_stock_market_balance_for_$trade_good_id$ 
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_balance_for_$trade_good_id$ 
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}


	#Growth since last month
	set_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$ 
		which = country_total_stock_market_supply_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$ 
		which = history_stock_market_supply_for_$trade_good_id$
	}
	set_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$ 
		which = country_total_stock_market_demand_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$ 
		which = history_stock_market_demand_for_$trade_good_id$
	}
	set_variable = {
		which = country_total_stock_market_balance_growth_for_$trade_good_id$ 
		which = country_total_stock_market_balance_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = country_total_stock_market_balance_growth_for_$trade_good_id$ 
		which = history_stock_market_balance_for_$trade_good_id$
	}

	set_variable = {
		which = stock_market_supply_for_$trade_good_id$ 
		which = country_stock_market_supply_for_$trade_good_id$
	}

	#set_variable = {
	#	which = stock_market_max_stockpile_for_$trade_good_id$
	#	value = 500
	#}
	#change_variable = {
	#	which = stock_market_max_stockpile_for_$trade_good_id$
	#	which = country_total_stock_market_supply_for_$trade_good_id$ 
	#}

	#multiply_variable = {
	#	which = stock_market_max_stockpile_for_$trade_good_id$
	#	value = 12
	#}

	# 75% goes to the global market - AMYZ changed so all goes to market
	#multiply_variable = {
	#	which = stock_market_supply_for_$trade_good_id$ 
	#	value = 0.75
	#}

	# 25% goes to the stockpile - AMYZ changed to 0
	#multiply_variable = {
	#	which = country_stock_market_supply_for_$trade_good_id$
	#	value = 0.25
	#	value = 0
	#}


	#if = {
	#	limit = {
	#		NOT = {
	#			check_variable = {
	#				which = country_stock_market_stockpile_for_$trade_good_id$
	#				which = stock_market_max_stockpile_for_$trade_good_id$
	#			}
	#		}
	#	}
	#	change_variable = {
	#		which = country_stock_market_stockpile_for_$trade_good_id$
	#		which = country_stock_market_supply_for_$trade_good_id$
	#	}
	#	if = {
	#		limit = {
	#			check_variable = {
	#				which = country_stock_market_stockpile_for_$trade_good_id$
	#				which = stock_market_max_stockpile_for_$trade_good_id$
	#			}
	#		}
	#		set_variable = {
	#			which = country_stock_market_stockpile_for_$trade_good_id$
	#			which = stock_market_max_stockpile_for_$trade_good_id$
	#		}
	#	}
	#}


}

set_REB_initial_variable = {
	set_variable = {
		which = stock_market_supply_for_$trade_good_id$
		value = 0
	}
	set_variable = {
		which = stock_market_demand_for_$trade_good_id$
		value = 0
	}
}

change_REB_variable = {
	change_variable = {
		which = stock_market_supply_for_$trade_good_id$
		which = PREV
	}
	change_variable = {
		which = stock_market_demand_for_$trade_good_id$
		which = PREV
	}
}

apply_policies = {
	if = {
		limit = {
			has_country_modifier = taxes_1_for_$trade_good_id$_modifier
		}
		multiply_variable = {
			which = stock_market_supply_for_$trade_good_id$
			value = 0.8
		}
	}
	else_if = {
		limit = {
			has_country_modifier = taxes_2_for_$trade_good_id$_modifier
		}
		multiply_variable = {
			which = stock_market_supply_for_$trade_good_id$
			value = 0.6
		}
	}
	else_if = {
		limit = {
			has_country_modifier = taxes_3_for_$trade_good_id$_modifier
		}
		multiply_variable = {
			which = stock_market_supply_for_$trade_good_id$
			value = 0.4
		}
	}
	else_if = {
		limit = {
			has_country_modifier = taxes_4_for_$trade_good_id$_modifier
		}
		multiply_variable = {
			which = stock_market_supply_for_$trade_good_id$
			value = 0.2
		}
	}
	else = { }

}

release_update = {
	REB = {
		execute_effect_for_every_trade_good = {
			scripted_effect = "set_REB_initial_variable"
		}
	}
	every_country = {
		limit = {
			NOT = {
				tag = REB
			}
		}

		#gain_merchant_capacity_monthly_for_country = yes

		set_country_flag = transaction_lock #use this to lock buying and selling if a month tick happens
		#while the event is open

		execute_effect_for_every_trade_good = {
			scripted_effect = "release_update_setup"
		}
		
		export_to_variable = {
			variable_name = temp_global_trade_goods_size_modifier
			value = modifier:global_trade_goods_size_modifier
			who = ROOT
		}
		export_to_variable = {
			variable_name = temp_global_trade_goods_size
			value = modifier:global_trade_goods_size
			who = ROOT
		}

		every_owned_province = {
			owner = {
				export_to_variable = {
					which = tempvardev
					value = trigger_value:base_manpower
					who = PREV
				}
			}
			#update_demand_based_on_craze = yes
			update_supply_and_demand_based_on_buildings = yes
			# execute_effect_for_every_trade_good = {
				# scripted_effect = "update_supply_for_trade_good"
			# }
			update_supply_for_trade_goods = yes
			execute_effect_for_every_trade_good = {
				scripted_effect = "update_demand_for_trade_good"
			}
		}
		execute_effect_for_every_trade_good = {
			scripted_effect = "update_national_supply_for_trade_good"
		}
		execute_effect_for_every_trade_good = {
			scripted_effect = "update_national_demand_for_trade_good"
		}
		
		#execute_effect_for_every_trade_good = {
		#	scripted_effect = "apply_policies"
		#}
		
		execute_effect_for_every_trade_good = {
			scripted_effect = "post_province_evaluation"
		}
		
		REB = {
			execute_effect_for_every_trade_good = {
				scripted_effect = "change_REB_variable"
			}
		}
	}
	
	REB = {
		execute_effect_for_every_trade_good = {
			scripted_effect = "save_old_prices"
		}
	}

	execute_effect_for_every_trade_good = {
		scripted_effect = "set_price_for_trade_good"
	}

	REB = {
		execute_effect_for_every_trade_good = {
			scripted_effect = "get_price_growth"
		}
	}

	#BUY / SELL needed goods
	#every_country = {
	#	limit = {
	#		NOT = {
	#			tag = REB
	#		}
	#	}		
	#	execute_effect_for_every_trade_good = {
	#		scripted_effect = "check_trade_good_satisfaction"
	#	}
	#}
}


update_national_supply_for_trade_good = {
	update_national_supply_for_trade_good_$trade_good_id$ = yes
}

update_national_demand_for_trade_good = {
	update_national_demand_for_trade_good_$trade_good_id$ = yes
}

update_demand_for_trade_good = {
	update_demand_for_trade_good_$trade_good_id$ = yes
}

stock_market_change_price_with_id = {
	stock_market_change_price_$trade_good_id$ = {
		value = $value$
		duration = $duration$
	}
}

stock_market_change_price = {
	change_price = {
		trade_goods = $trade_goods$
		key = "Current Market Conditions"
		value = $value$
		duration = $duration$
	}
}

save_old_prices = {
	set_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$
		which = stock_market_old_supply_for_$trade_good_id$
	}
	subtract_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$
		which = stock_market_supply_for_$trade_good_id$
	}
	multiply_variable = {
		which = country_total_stock_market_supply_growth_for_$trade_good_id$
		value = -1
	}
	set_variable = {
		which = stock_market_old_supply_for_$trade_good_id$
		which = stock_market_supply_for_$trade_good_id$
	}
	set_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$
		which = stock_market_old_demand_for_$trade_good_id$
	}
	subtract_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$
		which = stock_market_demand_for_$trade_good_id$
	}
	multiply_variable = {
		which = country_total_stock_market_demand_growth_for_$trade_good_id$
		value = -1
	}
	set_variable = {
		which = stock_market_old_demand_for_$trade_good_id$
		which = stock_market_demand_for_$trade_good_id$
	}
	
	set_variable = {
		which = history_stock_market_price_for_$trade_good_id$
		which = stock_market_price_value_$trade_good_id$
	}
}
get_price_growth = {
	set_variable = {
		which = stock_market_prices_growth_for_$trade_good_id$
		which = stock_market_price_value_$trade_good_id$
	}
	subtract_variable = {
		which = stock_market_prices_growth_for_$trade_good_id$
		which = history_stock_market_price_for_$trade_good_id$
	}
}


set_price_for_trade_good = {
	#Assuming we have a way to get the global default price
	REB = {
		set_variable = {
			which = stock_market_price_value_$trade_good_id$
			value = 5
		}
		set_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_demand_for_$trade_good_id$
		}
		change_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_extra_demand_for_$trade_good_id$ #this is demand induced by buying goods. Slowly decays.
		}
		subtract_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_supply_for_$trade_good_id$
		}
		subtract_variable = {
			which = difference_value_$trade_good_id$
			which = stock_market_extra_supply_for_$trade_good_id$
		}
		set_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_supply_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_extra_supply_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_demand_for_$trade_good_id$
		}
		change_variable = {
			which = sum_value_$trade_good_id$
			which = stock_market_extra_demand_for_$trade_good_id$ #this is demand induced by buying goods. Slowly decays.
		}
		set_variable = {
			which = price_multiplier_$trade_good_id$
			which = difference_value_$trade_good_id$
		}
		divide_variable = {
			which = price_multiplier_$trade_good_id$
			which = sum_value_$trade_good_id$
		}
		change_variable = {
			which = price_multiplier_$trade_good_id$
			value = 1
		}
		multiply_variable = {
			which = price_multiplier_$trade_good_id$
			which = price_multiplier_$trade_good_id$
		}

		# NEEDS to happen before removing the 1
		multiply_variable = {
			which = stock_market_price_value_$trade_good_id$
			which = price_multiplier_$trade_good_id$
		}
		
		subtract_variable = {
			which = price_multiplier_$trade_good_id$
			value = 1
		}

	}
}

stock_market_on_startup = {
	15000 = {
		add_province_triggered_modifier = stock_market_refresh_prices_monthly
		set_province_flag = first_game_month_flag
	}

	#measure_startup = yes
	priority_update = yes 
	apply_change_price_for_all_with_duration = { duration = 19 }

	#every_country = {
	#	update_merchant_capacity_modifiers_for_country = yes
	#	set_variable = {
	#		which = merchant_capacity_left
	#		which = merchant_capacity_total
	#	}
	#}

}

priority_update = {
	release_update = yes
}

check_trade_good_satisfaction = {
	#$trade_good_id$

	clear_satisfaction_modifier_for = { trade_good_id = $trade_good_id$ }
	REB = {
		PREV = {
			set_variable = {
				which = stock_market_price_value_$trade_good_id$
				which = PREV
			}
		}
	}

 	#country_total_stock_market_balance_for_$trade_good_id$ #Balance
	#country_stock_market_supply_for_$trade_good_id$ #Stockpile this month
	set_variable = {
		which = temp_calc_balance
		which = stock_market_supply_for_$trade_good_id$ 
	}
	subtract_variable = {
		which = temp_calc_balance
		which = stock_market_demand_for_$trade_good_id$
	}

	#Balance without stockpile
	if = {
		limit = {
			check_variable = {
				which = temp_calc_balance
				value = 0
			}
		}

		if = {
			limit = {
				NOT = {
					is_variable_equal = {
						which = stock_market_demand_for_$trade_good_id$
						value = 0
					}
				}
			}

			set_variable = {
				which = temp_calc_percentage
				which = temp_calc_balance
			}

			divide_variable = {
				which = temp_calc_percentage
				which = stock_market_demand_for_$trade_good_id$
			}

			if = {
				limit = {
					check_variable = {
						which = temp_calc_percentage
						value = 2
					}
				}
				add_country_modifier = { 
					name = over_satisfaction_of_$trade_good_id$
					duration = -1  
				}

			}
			else_if = {
				limit = {
					check_variable = {
						which = temp_calc_percentage
						value = 1.5
					}
				}
				add_country_modifier = { 
					name = high_satisfaction_of_$trade_good_id$
					duration = -1  
				}
			}
		}

		set_variable = {
			which = temp_total_autosell
			which = temp_calc_balance
		}
		multiply_variable = {
			which = temp_total_autosell
			which = stock_market_price_value_$trade_good_id$
		}
		multiply_variable = {
			which = temp_total_autosell
			value = 0.01
		}

		gain_ducats_based_on_variable = {
			variable_name = temp_total_autosell
		}

		set_variable = {
			which = last_month_income_from_$trade_good_id$
			which = temp_total_autosell
		}

		#We can sell the rest
		#We won't send the supply globaly as it was already done
	}
	else = {
		#Check if we can use stockpile
		if = {
			limit = {
				NOT = {
					has_country_flag = block_stockpile_1_for_$trade_good_id$
				}
			}

			#Use stockpile
			change_variable = {
				which = temp_calc_balance
				which = country_stock_market_stockpile_for_$trade_good_id$
			}	
	
		}

		#If temp is positive, that's our stockpile, if it's negative, we buy

		if = {
			limit = {
				check_variable = {
					which = temp_calc_balance
					value = 0
				}
			}

			set_variable = {
				which = country_stock_market_stockpile_for_$trade_good_id$
				which = temp_calc_balance
			}
			set_variable = {
				which = temp_calc_balance
				value = 0
			}
		}
		else = {
			#We use up stockpile and buy
			set_variable = {
				which = country_stock_market_stockpile_for_$trade_good_id$
				value = 0
			}

			multiply_variable = {
				which = temp_calc_balance
				value = -1
			}

		
			#buy trade good based on variable don't change price

			#check how much we can buy

			if = {
				limit = {
					NOT = { has_country_flag = block_import_1_for_$trade_good_id$ }
				}

				set_variable = {
					which = temp_total_autobuy
					which = temp_calc_balance
				}

				multiply_variable = {
					which = temp_total_autobuy
					which = stock_market_price_value_$trade_good_id$
				}

				multiply_variable = {
					which = temp_total_autobuy
					value = 0.01
				}

				#Total cash

				export_to_variable = {
					variable_name = stock_market_cash
					value = treasury
				}

				if = {
					limit = {
						has_country_flag = not_unlimited_budget_for_$trade_good_id$
					}

					if = {
						limit = {
							check_variable = {
								which = stock_market_cash
								which = stock_market_budget_for_$trade_good_id$
							}
						}
						set_variable = {
							which = stock_market_cash
							which = stock_market_budget_for_$trade_good_id$
						}
					}

				}

				if = {
					limit = {
						check_variable = {
							which = stock_market_cash
							which = temp_total_autobuy
						}				
					}
					#We are fine
					spend_ducats_based_on_variable = {
						variable_name = temp_total_autobuy
					}
					set_variable = {
						which = last_month_income_from_$trade_good_id$
						which = temp_total_autobuy
					}
					multiply_variable = {
						which = last_month_income_from_$trade_good_id$
						value = -1
					}
					set_variable = {
						which = temp_calc_balance
						value = 0
					}
				}
				else = {
					subtract_variable = {
						which = temp_total_autobuy
						which = stock_market_cash
					}
					spend_ducats_based_on_variable = {
						variable_name = stock_market_cash
					}
					set_variable = {
						which = last_month_income_from_$trade_good_id$
						which = stock_market_cash
					}
					multiply_variable = {
						which = last_month_income_from_$trade_good_id$
						value = -1
					}

					set_variable = {
						which = temp_calc_balance
						which = temp_total_autobuy
					}
					divide_variable = {
						which = temp_calc_balance
						which = stock_market_price_value_$trade_good_id$
					}
					multiply_variable = {
						which = temp_calc_balance
						which = 100
					}

				}

			}
		}
		#check if any balance left
		if = {
			limit = {
				check_variable = {
					which = temp_calc_balance
					value = 0
				}
				NOT = {
					is_variable_equal = {
						which = stock_market_demand_for_$trade_good_id$
						value = 0
					}
				}
			}

			#change balance to percentage
			divide_variable = {
				which = temp_calc_balance
				which = stock_market_demand_for_$trade_good_id$
			}

			if = {
				limit = {
					check_variable = {
						which = temp_calc_balance
						value = 0.5
					}
				}
				add_country_modifier = { 
					name = severe_shortage_of_$trade_good_id$
					duration = -1  
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = temp_calc_balance
						value = 0.25
					}
				}
				add_country_modifier = { 
					name = mediocre_shortage_of_$trade_good_id$
					duration = -1  
				}
			}
			else_if = {
				limit = {
					check_variable = {
						which = temp_calc_balance
						value = 0.1
					}
					total_development = 500
				}

				add_country_modifier = { 
					name = acute_shortage_of_$trade_good_id$
					duration = -1  
				}
			}
		}
	}

	set_variable = {
		which = stock_market_stockpile_growth_for_$trade_good_id$
		which = country_stock_market_stockpile_for_$trade_good_id$
	}
	subtract_variable = {
		which = stock_market_stockpile_growth_for_$trade_good_id$
		which = history_stock_market_stockpile_for_$trade_good_id$
	}

	set_variable = {
		which = country_total_stock_market_income_growth_for_$trade_good_id$
		which = last_month_income_from_$trade_good_id$
	}
	subtract_variable = {
		which = country_total_stock_market_income_growth_for_$trade_good_id$
		which = history_last_month_income_from_$trade_good_id$
	}

}

clear_satisfaction_modifier_for = {
	if = {
		limit = {
			has_country_modifier = severe_shortage_of_$trade_good_id$
		}
		remove_country_modifier = severe_shortage_of_$trade_good_id$
	}
	else_if = { #how will you acquire more than one, realistically?
		limit = {
			has_country_modifier = mediocre_shortage_of_$trade_good_id$
		}
		remove_country_modifier = mediocre_shortage_of_$trade_good_id$
	}
	else_if = {
		limit = {
			has_country_modifier = acute_shortage_of_$trade_good_id$
		}
		remove_country_modifier = acute_shortage_of_$trade_good_id$
	}
	else_if = {
		limit = {
			has_country_modifier = high_satisfaction_of_$trade_good_id$
		}
		remove_country_modifier = high_satisfaction_of_$trade_good_id$
	}
	else_if = {
		limit = {
			has_country_modifier = over_satisfaction_of_$trade_good_id$
		}
		remove_country_modifier = over_satisfaction_of_$trade_good_id$
	}
	else = { }
}
