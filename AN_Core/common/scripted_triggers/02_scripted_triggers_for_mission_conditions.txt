# This file contains all triggers which are are needed for dynamic effects, but have more than 512 characters in total.
tur_al_andalus_eyalet_limit_a = {
	OR = {
		any_subject_country = {
			religion = ROOT
			owns = 225
			owns = 223
			owns = 226
			owns = 224
			num_of_owned_provinces_with = {
				region = iberia_region
				value = 10
			}
			capital_scope = {
				region = iberia_region
			}
		}
		any_ally = {
			religion = ROOT
			owns = 225
			owns = 223
			owns = 226
			owns = 224
			num_of_owned_provinces_with = {
				region = iberia_region
				value = 10
			}
			capital_scope = {
				region = iberia_region
			}
		}
	}
}

BYZ_roman_empire_decision_trigger = {
	OR = {
		#Core Regions
		region = anatolia_region
		region = egypt_region
		region = italy_region
		region = france_region
		region = iberia_region
		region = mashriq_region
		region = balkan_region
		#England
		area = east_midlands_area
		area = west_midlands_area
		area = yorkshire_area
		area = wessex_area
		area = home_counties_area
		area = east_anglia_area
		area = wales_area
		area = scottish_marches_area
		#Areas within South Germany
		area = romandie_area
		area = upper_rhineland_area
		area = romandie_area
		area = alsace_area
		area = palatinate_area
		area = lower_rhineland_area
		area = carinthia_area
		province_id = 85 #cologne
		area = north_brabant_area
		area = brabant_area
		area = flanders_area
		area = wallonia_area
		province_id = 96 #zeeland
		area = inner_austria_area
		area = austria_proper_area
		area = tirol_area
		area = east_bavaria_area
		area = lower_bavaria_area
		area = upper_bavaria_area
		area = upper_swabia_area
		area = lower_swabia_area
		area = switzerland_area
		#Carthage
		area = barbary_coast_area
		area = kabylia_area
		area = tunisia_area
		area = djerba_area
		area = tripolitania_area
		area = northern_morocco_area
		area = algiers_area
		province_id = 343
		#Danubia
		area = transdanubia_area
	}
	NOT = { area = lower_nubia_area }
	NOT = { area = iraq_arabi_area }
	NOT = { area = basra_area }
}

BYZ_has_rights_of_man = {
	has_dlc = "Rights of Man"
}

BYZ_has_leviathan = {
	has_dlc = "Leviathan"
}

BYZ_eligible_province_for_culture_conversion = {
	OR = {
		area = aydin_area
		area = hudavendigar_area
		AND = {
			owner = {
				mission_completed = BYZ_avenge_1071
			}
			region = anatolia_region
		}
	}
}

BYZ_reached_pronia_slot_limit = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			variable_name = current_amount_of_pronoiars
			value = modifier:pronoia_amount_check_influence
		}
		export_to_variable = {
			variable_name = max_amount_of_pronoiars
			value = modifier:num_of_pronoiars
		}
		check_variable = {
			which = current_amount_of_pronoiars
			which = max_amount_of_pronoiars
		}
	}
}

BYZ_enough_pronoia_slots = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			variable_name = current_amount_of_pronoiars
			value = modifier:pronoia_amount_check_influence
		}
		export_to_variable = {
			variable_name = max_amount_of_pronoiars
			value = modifier:num_of_pronoiars
		}
		NOT = {
			check_variable = {
				which = current_amount_of_pronoiars
				which = max_amount_of_pronoiars
			}
		}
	}
}

BYZ_branch_trigger = {
	custom_trigger_tooltip = {
		tooltip = BYZ_this_is_a_branching_mission
		always = no
	}
}

byz_is_in_middle_east_or_europe = {
	capital_scope = {
		OR = {
			superregion = europe_superregion
			superregion = eastern_europe_superregion
			superregion = near_east_superregion
			superregion = persia_superregion
			region = maghreb_region
		}
	}
}

BYZ_historical_interest_against_ottomans = {
	OR = {
		tag = POL
		tag = LIT
		tag = HUN
		tag = HAB
		tag = ALB
	}
}

BYZ_is_not_latin_empire = {
	if = {
		limit = {
			tag = LAE
			religion = catholic
		}
		custom_trigger_tooltip = {
			tooltip = BYZ_may_not_complete_as_catholic_latin_empire
			always = no
		}
	}
}

ITA_branch_trigger = {
	custom_trigger_tooltip = {
		tooltip = ITA_this_is_a_branching_mission
		always = no
	}
}

GER_can_integrate_culture = {
	NOT = { has_country_flag = GER_integrated_$culture$ }
	NOT = { has_country_flag = GER_integrating_$culture$ }
	any_owned_province = {
		culture = $culture$ 
	}
	NOT = { primary_culture = $culture$ }
}

GER_can_integrate_a_culture = {
	OR = {
		GER_can_integrate_culture = { culture = pommeranian }
		GER_can_integrate_culture = { culture = austrian }
		GER_can_integrate_culture = { culture = bavarian }
		GER_can_integrate_culture = { culture = swiss }
		GER_can_integrate_culture = { culture = swabian }
		GER_can_integrate_culture = { culture = franconian }
		GER_can_integrate_culture = { culture = saxon }
		GER_can_integrate_culture = { culture = hessian }
		GER_can_integrate_culture = { culture = hannoverian }
		GER_can_integrate_culture = { culture = lower_saxon }
		GER_can_integrate_culture = { culture = prussian }
	}
}

GER_integrating_a_culture = {
	OR = {
		has_country_flag = GER_integrating_pommeranian
		has_country_flag = GER_integrating_austrian
		has_country_flag = GER_integrating_bavarian
		has_country_flag = GER_integrating_swiss
		has_country_flag = GER_integrating_swabian
		has_country_flag = GER_integrating_franconian
		has_country_flag = GER_integrating_saxon
		has_country_flag = GER_integrating_hessian
		has_country_flag = GER_integrating_hannoverian
		has_country_flag = GER_integrating_lower_saxon
		has_country_flag = GER_integrating_prussian
	}
}

GET_integrated_all_cultures = {
	has_country_flag = GER_integrated_pommeranian
	has_country_flag = GER_integrated_austrian
	has_country_flag = GER_integrated_bavarian
	has_country_flag = GER_integrated_swiss
	has_country_flag = GER_integrated_swabian
	has_country_flag = GER_integrated_franconian
	has_country_flag = GER_integrated_saxon
	has_country_flag = GER_integrated_hessian
	has_country_flag = GER_integrated_hannoverian
	has_country_flag = GER_integrated_lower_saxon
	has_country_flag = GER_integrated_prussian
}

GER_num_of_cultures_accepted = {
	calc_true_if = {
		amount = $amount$
		desc = GER_accepted_cultures
		AND = {
			OR = {
				primary_culture = pommeranian
				has_country_flag = GER_integrated_pommeranian
			}
		}
		AND = {
			OR = {
				primary_culture = lower_saxon
				has_country_flag = GER_integrated_lower_saxon
			}
		}
		AND = {
			OR = {
				primary_culture = prussian
				has_country_flag = GER_integrated_prussian
			}
		}
		AND = {
			OR = {
				primary_culture = hannoverian
				has_country_flag = GER_integrated_hannoverian
			}
		}
		AND = {
			OR = {
				primary_culture = hessian
				has_country_flag = GER_integrated_hessian
			}
		}
		AND = {
			OR = {
				primary_culture = saxon
				has_country_flag = GER_integrated_saxon
			}
		}
		AND = {
			OR = {
				primary_culture = franconian
				has_country_flag = GER_integrated_franconian
			}
		}
		AND = {
			OR = {
				primary_culture = swabian
				has_country_flag = GER_integrated_swabian
			}
		}
		AND = {
			OR = {
				primary_culture = swiss
				has_country_flag = GER_integrated_swiss
			}
		}
		AND = {
			OR = {
				primary_culture = bavarian
				has_country_flag = GER_integrated_bavarian
			}
		}
		AND = {
			OR = {
				primary_culture = austrian
				has_country_flag = GER_integrated_austrian
			}
		}
	}
}

GER_is_accepting_culture_being_integrated = {
	OR = {
		AND = {
			accepted_culture = pommeranian
			has_country_flag = GER_integrating_pommeranian
		}
		AND = {
			accepted_culture = prussian
			has_country_flag = GER_integrating_prussian
		}
		AND = {
			accepted_culture = lower_saxon
			has_country_flag = GER_integrating_lower_saxon
		}
		AND = {
			accepted_culture = hannoverian
			has_country_flag = GER_integrating_hannoverian
		}
		AND = {
			accepted_culture = hessian
			has_country_flag = GER_integrating_hessian
		}
		AND = {
			accepted_culture = saxon
			has_country_flag = GER_integrating_saxon
		}
		AND = {
			accepted_culture = franconian
			has_country_flag = GER_integrating_franconian
		}
		AND = {
			accepted_culture = swabian
			has_country_flag = GER_integrating_swabian
		}
		AND = {
			accepted_culture = swiss
			has_country_flag = GER_integrating_swiss
		}
		AND = {
			accepted_culture = bavarian
			has_country_flag = GER_integrating_bavarian
		}
		AND = {
			accepted_culture = austrian
			has_country_flag = GER_integrating_austrian
		}
	}
}

GER_has_matching_culture = {
	OR = {
		AND = {
			culture = pommeranian
			owner = { has_country_flag = GER_integrating_pommeranian }
		}
		AND = {
			culture = prussian
			owner = { has_country_flag = GER_integrating_prussian }
		}
		AND = {
			culture = lower_saxon
			owner = { has_country_flag = GER_integrating_lower_saxon }
		}
		AND = {
			culture = hannoverian
			owner = { has_country_flag = GER_integrating_hannoverian }
		}
		AND = {
			culture = hessian
			owner = { has_country_flag = GER_integrating_hessian }
		}
		AND = {
			culture = saxon
			owner = { has_country_flag = GER_integrating_saxon }
		}
		AND = {
			culture = franconian
			owner = { has_country_flag = GER_integrating_franconian }
		}
		AND = {
			culture = swabian
			owner = { has_country_flag = GER_integrating_swabian }
		}
		AND = {
			culture = swiss
			owner = { has_country_flag = GER_integrating_swiss }
		}
		AND = {
			culture = bavarian
			owner = { has_country_flag = GER_integrating_bavarian }
		}
		AND = {
			culture = austrian
			owner = { has_country_flag = GER_integrating_austrian }
		}
	}
}

surpass_poland_complex_scripted_trigger = {
	OR = {
		AND = {
			exists = PLC
			PLC = { valid_for_personal_unions_trigger = yes }
			valid_for_personal_unions_trigger = yes
			PLC = { NOT = { total_own_and_non_tributary_subject_development = 400 } }
		}
		AND = {
			exists = POL
			POL = { valid_for_personal_unions_trigger = yes }
			valid_for_personal_unions_trigger = yes
			POL = { NOT = { total_own_and_non_tributary_subject_development = 400 } }
		}
	}
}

TIM_persia_tree_trigger = {
	has_country_flag = TIM_persian_missions
}

TIM_nomad_tree_trigger = {
	has_country_flag = TIM_nomad_missions
}

TIM_interested_in_persian_matter = {
	capital_scope = {
		OR = {
			superregion = persia_superregion
			superregion = near_east_superregion
			superregion = india_superregion
			superregion = tartary_superregion
			region = crimea_region
		}
	}
}

TIM_enough_soyurghal_slots = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			variable_name = current_amount_of_soyurghals
			value = modifier:soyurghals_amount_check_influence
		}
		export_to_variable = {
			variable_name = max_amount_of_soyurghals
			value = modifier:num_of_soyurghals
		}
		NOT = {
			check_variable = {
				which = current_amount_of_soyurghals
				which = max_amount_of_soyurghals
			}
		}
	}
}

TIM_reached_soyurghal_slot_limit = {
	variable_arithmetic_trigger = {
		export_to_variable = {
			variable_name = current_amount_of_soyurghals
			value = modifier:soyurghals_amount_check_influence
		}
		export_to_variable = {
			variable_name = max_amount_of_soyurghals
			value = modifier:num_of_soyurghals
		}
		check_variable = {
			which = current_amount_of_soyurghals
			which = max_amount_of_soyurghals
		}
	}
}

is_part_of_trunk_road = { 
	OR = {
		province_id = 4449
		province_id = 2076
		province_id = 507
		province_id = 2075
		province_id = 510
		province_id = 2062
		province_id = 522
		province_id = 524
		province_id = 2063
		province_id = 523
		province_id = 555
		province_id = 4490
		province_id = 4487
		province_id = 4489
		province_id = 2044
		province_id = 563
		province_id = 4479
		province_id = 4476
		province_id = 561
		province_id = 4475
	}
}

every_trunk_road_province_trigger = {
	custom_trigger_tooltip = {
		tooltip = $tooltip$
		4449 = { $trigger$ }
		2076 = { $trigger$ }
		507 = { $trigger$ }
		2075 = { $trigger$ }
		510 = { $trigger$ }
		2062 = { $trigger$ }
		522 = { $trigger$ }
		524 = { $trigger$ }
		2063 = { $trigger$ }
		523 = { $trigger$ }
		555 = { $trigger$ }
		4490 = { $trigger$ }
		4487 = { $trigger$ }
		4489 = { $trigger$ }
		2044 = { $trigger$ }
		563 = { $trigger$ }
		4479 = { $trigger$ }
		4476 = { $trigger$ }
		561 = { $trigger$ }
		4475 = { $trigger$ }
	}
}

reform_civil_registration_first_limit = {
	if = {
		limit = { has_estate = estate_eunuchs } 
		has_estate_privilege = estate_eunuchs_land_rights_privilege
	}
	if = {
		limit = { has_estate = estate_burghers } 
		has_estate_privilege = estate_burghers_land_rights 
	}
	if = {
		limit = { has_estate = estate_nobles } 
		has_estate_privilege = estate_nobles_land_rights 
	}
	if = {
		limit = { has_estate = estate_church } 
		has_estate_privilege = estate_church_land_rights 
	}
	if = {
		limit = { has_estate = estate_nomadic_tribes } 
		has_estate_privilege = estate_nomadic_tribes_land_rights
	}
	OR = {
		has_estate = estate_eunuchs
		has_estate = estate_burghers
		has_estate = estate_nobles
		has_estate = estate_church
		has_estate = estate_nomadic_tribes
	}
}

reform_civil_registration_second_limit = {
	NOT = {
		if = {
			limit = { has_estate = estate_eunuchs } 
			has_estate_privilege = estate_eunuchs_land_rights_privilege
		}
		if = {
			limit = { has_estate = estate_burghers } 
			has_estate_privilege = estate_burghers_land_rights 
		}
		if = {
			limit = { has_estate = estate_nobles } 
			has_estate_privilege = estate_nobles_land_rights 
		}
		if = {
			limit = { has_estate = estate_church } 
			has_estate_privilege = estate_church_land_rights 
		}
		if = {
			limit = { has_estate = estate_nomadic_tribes } 
			has_estate_privilege = estate_nomadic_tribes_land_rights
		}
		OR = {
			has_estate = estate_eunuchs
			has_estate = estate_burghers
			has_estate = estate_nobles
			has_estate = estate_church
			has_estate = estate_nomadic_tribes
		}
	}
}

is_tatar_nation = {
	OR = {
		tag = GOL
		tag = CRI
		tag = NOG
		tag = KAZ
		tag = SIB
		tag = BSH
		tag = AST
		tag = QAS
	}
}

was_tatar_nation = {
	OR = {
		was_tag = GOL
		was_tag = CRI
		was_tag = NOG
		was_tag = KAZ
		was_tag = SIB
		was_tag = BSH
		was_tag = AST
		was_tag = QAS
	}
}

is_mongol_nation = {
	OR = {
		tag = OIR
		tag = KHA
		tag = KRC
		tag = HMI
	}
}

was_mongol_nation = {
	OR = {
		was_tag = OIR
		was_tag = KHA
		was_tag = KRC
		was_tag = HMI
	}
}

is_monghulistan_nation = {
	OR = {
		tag = KAS
		tag = CHG
		tag = SHY #Technically not Moghulistan, but part of Central Asia
		tag = BUK #Technically not Moghulistan, just an extension of Uzbek
		tag = KZH
	}
}

was_monghulistan_nation = {
	OR = {
		was_tag = KAS
		was_tag = CHG
		was_tag = SHY #Technically not Moghulistan, but part of Central Asia
		was_tag = BUK #Technically not Moghulistan, just an extension of Uzbek
		was_tag = KZH
	}
}