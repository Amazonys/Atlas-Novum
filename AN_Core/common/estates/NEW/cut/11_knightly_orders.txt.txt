estate_knightly_orders =
{
	icon = 11

	color = { 150 150 150 } #Light-gray

	# Is estate kept in control of province on conquest?
	keep_on_conquest = no

	# Giving territory affects power this much compared to base
	territory_power_modifier = 0.667 #Should in theory yield 1%/1%.

	wanted_territory_modifier = {
		desc = EST_VAL_REVOKED_KNIGHTLY_ORDERS_AUTONOMY
		trigger = {
			has_country_flag = lte_absolutism_vassals_revoked
		}
		value = 2.5
	}

	# If true, country will get estate
	trigger = {
		has_country_flag = lte_absolutism_vassals_revoked
	}
	# If true, province can be granted to estate
	province_trigger = {
		always = yes
	}

	# Min autonomy in estate provinces
	min_autonomy = 25

	# Estate cancels out the following multiplicative local autonomy effects:
	autonomy_does_not_affect = local_manpower_modifier
	autonomy_does_not_affect = local_sailors_modifier
	autonomy_does_not_affect = land_forcelimit_modifier

	country_modifier_happy = {
		mercenary_discipline = 0.2
		merc_maintenance_modifier = -1 #Vanilla has a base +150%, so this negates about... 40% of the cost on its own. A bit more if other modifiers are applied
		loot_amount = 0.5
		possible_mercenaries = 1
	}
	country_modifier_neutral = {
		possible_mercenaries = 1
	}
	country_modifier_angry = {
		mercenary_discipline = -0.2
		merc_maintenance_modifier = 2 #Vanilla has a base +150%, so this negates about... 40% of the cost on its own. A bit more if other modifiers are applied
		possible_mercenaries = -0.5
		loot_amount = -0.5
	}

	# These do not scale, but only applied in provinces owned by the estate
	province_modifier_happy = {
		regiment_recruit_speed = -0.5
		#How do these actually work??
		local_hostile_movement_speed = 0.25
		local_friendly_movement_speed = -0.25
	}
	province_modifier_neutral = {
		regiment_recruit_speed = -0.5
	}
	province_modifier_angry = {
		regiment_recruit_speed = 0.5
		#How do these actually work??
		local_hostile_movement_speed = -0.25
		local_friendly_movement_speed = 0.25
	}

	# Influence modifiers
	base_influence = 5
	#Well-developed Knightly Seat
	influence_modifier = {
		desc = EST_VAL_HIGH_DEVELOPMENT_KNIGHTLY_SEAT
		trigger = {
			any_owned_province = {
				has_estate = estate_knightly_orders
				development = 20
			}
			NOT = { #To prevent this existing when very-well developed theme capital is in effect
				any_owned_province = {
					has_estate = estate_knightly_orders
					development = 30
				}
			}
		}
		influence = 5
	}
	#Very well-developed Knightly Seat
	influence_modifier = {
		desc = EST_VAL_HIGH_DEVELOPMENT_KNIGHTLY_SEAT
		trigger = {
			any_owned_province = {
				has_estate = estate_knightly_orders
				development = 30
			}
		}
		influence = 10
	}
	#% Mercenaries
	influence_modifier = {
		desc = EST_VAL_FEW_MERCENARIES
		trigger = {
			num_of_mercenaries = 5
			NOT = {
				num_of_mercenaries = 20
			}
		}
		influence = 5
	}
	influence_modifier = {
		desc = EST_VAL_SOME_MERCENARIES
		trigger = {
			num_of_mercenaries = 25
			NOT = {
				num_of_mercenaries = 45
			}
		}
		influence = 10
	}
	influence_modifier = {
		desc = EST_VAL_MANY_MERCENARIES
		trigger = {
			num_of_mercenaries = 45
			NOT = {
				num_of_mercenaries = 70
			}
		}
		influence = 15
	}
	influence_modifier = {
		desc = EST_VAL_VERY_MANY_MERCENARIES
		trigger = {
			num_of_mercenaries = 70
		}
		influence = 20
	}

	# Influence modifiers from Events:
	influence_modifier = {
		desc = EST_VAL_OTHER_ESTATE_IN_POWER
		trigger = {
			OR = {
				has_disaster = estate_church_disaster
				has_disaster = estate_burghers_disaster
				has_disaster = estate_nobility_disaster
			}
		}
		influence = -40
	}

	# Loyalty modifiers
	loyalty_modifier = {
		desc = EST_VAL_OTHER_ESTATE_IN_POWER_LOY
		trigger = {
			OR = {
				has_disaster = estate_church_disaster
				has_disaster = estate_burghers_disaster
				has_disaster = estate_nobility_disaster
			}
		}
		loyalty = -20
	}

	# Alternative naming of estates
	# No.

	# Does the AI want to give any extra territory beyond the minimum?
	# No.

	# For province assignment
	ai_grant_province = {
		factor = 1
	}

	# Special interactions

	#Donate to Crusader Orders
	interaction = {
		name = "DONATE_TO_CRUSADERS"
		icon = 7

		years_between_use = 10

		potential = {
			NOT = { has_disaster = estate_nobility_disaster }
			NOT = { has_disaster = estate_burghers_disaster }
			NOT = { has_disaster = estate_church_disaster }
		}

		trigger = {
			always = yes
		}

		effect = {
			add_years_of_income = -0.25
			add_estate_loyalty = {
				estate = estate_knightly_orders
				loyalty = 15
			}
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { years_of_income = 0.5 }
			}
			modifier = {
				factor = 0
				estate_loyalty = {
					estate = estate_knightly_orders
					loyalty = 40
				}
			}
		}
	}

	#Recruit Minister (Note: Uses vanilla localisation for both interaction name and nobility influence modifier)
	interaction = {
		name = "RECRUIT_MINISTER"
		icon = 24

		years_between_use = 30

		potential = {
			NOT = { has_disaster = estate_church_disaster }
			NOT = { has_disaster = estate_burghers_disaster }
			NOT = { has_disaster = estate_nobility_disaster }
		}

		trigger = {
			estate_influence = {
				estate = estate_knightly_orders
				influence = 40
			}
		}

		effect = {
			hidden_effect = {
				random_owned_province = {
					limit = {
						has_estate = estate_knightly_orders
					}
					save_event_target_as = knightly_orders_estate_province
				}
			}
			if = {
				limit = {
					monthly_income = 25
					has_saved_event_target = knightly_orders_estate_province
				}
				define_advisor = {
					type = master_recruiter
					skill = 3
					culture = event_target:knightly_orders_estate_province
					religion = event_target:knightly_orders_estate_province
					location = event_target:knightly_orders_estate_province
					discount = yes
				}
			}
			else_if = {
				limit = {
					monthly_income = 25
					NOT = { has_saved_event_target = knightly_orders_estate_province }
				}
				define_advisor = {
					type = master_recruiter
					skill = 3
					discount = yes
				}
			}
			else_if = {
				limit = {
					NOT = { monthly_income = 25 }
					has_saved_event_target = knightly_orders_estate_province
				}
				define_advisor = {
					type = master_recruiter
					skill = 2
					discount = yes
					culture = event_target:knightly_orders_estate_province
					religion = event_target:knightly_orders_estate_province
					location = event_target:knightly_orders_estate_province
				}
			}
			else_if = {
				limit = {
					NOT = { monthly_income = 25 }
					NOT = { has_saved_event_target = knightly_orders_estate_province }
				}
				define_advisor = {
					type = master_recruiter
					skill = 2
					discount = yes
				}
			}
			add_estate_influence_modifier = {
				estate = estate_exarches
				desc = EST_VAL_NOBLES_MINISTER
				influence = 15
				duration = 10950
			}
			add_estate_loyalty = {
				estate = estate_nobles
				loyalty = -5
			}
		}
	}

	#Coming soon!
}