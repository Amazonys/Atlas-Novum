namespace = elections

# Election!
country_event = {
	id = 700
	title = "EVTNAME700"
	picture = ELECTION_REPUBLICAN_eventPicture

	desc = {
		trigger = {
			NOT = { has_ruler_flag = leader_has_been_pushed_out }
			NOT = { has_country_flag = caretaker_revolutionary_government }
		}
		desc = EVTDESC700
	}

	desc = {
		trigger = { has_ruler_flag = leader_has_been_pushed_out }
		desc = elections.700.d
	}
	desc = {
		trigger = { has_country_flag = caretaker_revolutionary_government }
		desc = elections.700.caretaker
	}

	is_triggered_only = yes

	trigger = {
		NOT = {
			OR = {
				has_reform = primitive_mechanic
				government = tribal
			}
		}
		NOT = { has_states_general_mechanic = yes }
		NOT = { has_government_attribute = lottery_election }
		NOT = { has_reform = pirate_republic_reform }
		NOT = { has_reform = military_dictatorship_reform }
		NOT = { has_reform = admiralty_reform }
		NOT = { has_reform = prussian_republic_reform }
		NOT = { has_disaster =  bonfire_of_the_vanities_disaster }
		if = {
			limit = {
				has_country_flag = caretaker_revolutionary_government
			}
			republican_tradition = 50
		}
	}

	after = {
		clr_country_flag = caretaker_revolutionary_government
	}

	option = {
		name = "EVTOPTA700"	# Current ruler stays
		trigger = {
			has_regency = no
			NOT = { has_ruler_flag = leader_has_been_pushed_out }
		}
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0
				NOT = { republican_tradition = 25 }
			}
			modifier = {
				factor = 0.5
				NOT = { republican_tradition = 50 }
			}
			modifier = {
				factor = 0.5
				NOT = { republican_tradition = 75 }
			}
			modifier = {
				factor = 2.0
				republican_tradition = 90
			}
		}
		custom_tooltip = remains_ruler
		change_adm = 1
		change_dip = 1
		change_mil = 1
		if = {
			limit = {
				is_tribal = no
				government = republic
				NOT = { republican_tradition = 20 }
				NOT = { is_revolutionary_republic_trigger = yes }
				has_dlc = "Res Publica"
			}
			add_government_reform = presidential_despot_reform
		}
		else_if = {
			limit = {
				government = republic
				NOT = { republican_tradition = 20 }
				is_revolutionary_republic_trigger = yes
			}
			change_government_to_monarchy = yes
			add_government_reform = revolutionary_empire_reform
		}
		if = {
			limit = {
				is_tribal = no
				government = republic
				NOT = { republican_tradition = 20 }
				NOT = { has_dlc = "Res Publica" }
			}
			change_government_to_monarchy = yes
			#set_legacy_government = despotic_monarchy
		}
		if = {
			limit = {
				has_country_flag = strengthened_signoria_flag
			}
			custom_tooltip = strengthened_signoria_election_tt
			clr_country_flag = strengthened_signoria_flag
		}
		else = {
			add_scaled_republican_tradition = -10
		}
		random_list = {
			10 = {
				add_adm_power = 50
			}
			10 = {
				add_dip_power = 50
			}
			10 = {
				add_mil_power = 50
			}
		}
		add_karma = -5
	}
	option = {
		name = "EVTOPTB700"	# An administrator type
		ai_chance = { factor = 20 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				mil = 1
				adm = 4
				dip = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				mil = 1
				adm = 4
				dip = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_guilds
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}
		}
		add_karma = 10
	}
	option = {
		name = "EVTOPTC700"	# A diplomat
		ai_chance = { factor = 20 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				dip = 4
				adm = 1
				mil = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				dip = 4
				adm = 1
				mil = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_traders
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}
		}
		add_karma = 10
	}
	option = {
		name = "EVTOPTD700"	# A military man
		ai_chance = { factor = 20 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				mil = 4
				adm = 1
				dip = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				mil = 4
				adm = 1
				dip = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}
		}
		add_karma = 10
	}

	option = { # Nepotism choice, re-electing within dynasty
		name = "EVTOPTE700"
		trigger = {
			has_government_attribute = enables_nepotism
		}
		ai_chance = { factor = 10 }
		if = {
			limit = {
				has_country_flag = strengthened_signoria_flag
			}
			custom_tooltip = strengthened_signoria_election_tt
			clr_country_flag = strengthened_signoria_flag
		}
		else = {
			add_scaled_republican_tradition = -4
		}
		if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				NOT = { has_reform = signoria_reform }
			}
			define_ruler = {
				mil = -2
				adm = -2
				dip = -2
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				has_reform = signoria_reform
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = { has_reform = signoria_reform }
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
			}
		}
		else = {
			define_ruler = {
				mil = -2
				adm = -2
				dip = -2
				min_age = 30
				max_age = 50
				name = "lastname"
			}
		}
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 10
			}
		}
	}
}

# Election!
country_event = {
	id = 701
	title = "EVTNAME700"
	desc = "EVTDESC701"
	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	trigger = {
		NOT = {
			OR = {
				has_reform = primitive_mechanic
				government = tribal
			}
		}
		NOT = { has_states_general_mechanic = yes }
		NOT = { has_government_attribute = lottery_election }
		NOT = { has_reform = pirate_republic_reform }
		NOT = { has_reform = military_dictatorship_reform }
		NOT = { has_reform = admiralty_reform }
		NOT = { has_reform = prussian_republic_reform }
		NOT = { has_disaster =  bonfire_of_the_vanities_disaster }
		NOT = { has_country_modifier = just_had_revolution_bringing_someone_to_power_timer }
		if = {
			limit = {
				has_reform = junior_revolutionary_republic_reform
				has_country_flag = caretaker_revolutionary_government
			}
			republican_tradition = 50
		}
	}

	option = {
		name = "EVTOPTB700"	# An administrator type
		ai_chance = { factor = 40 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				mil = 1
				adm = 4
				dip = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				mil = 1
				adm = 4
				dip = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_guilds
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}
		}
	}
	option = {
		name = "EVTOPTC700"	# A diplomat
		ai_chance = { factor = 30 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				dip = 4
				adm = 1
				mil = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				dip = 4
				adm = 1
				mil = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_traders
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}
		}
	}
	option = {
		name = "EVTOPTD700"	# A military man
		ai_chance = { factor = 30 }
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				mil = 4
				adm = 1
				dip = 1
				fixed = yes
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				mil = 4
				adm = 1
				dip = 1
				fixed = yes
			}
		}
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}
		}
	}
	option = { # Nepotism choice, re-electing within dynasty
		name = "EVTOPTE700"
		trigger = {
			has_government_attribute = enables_nepotism
		}
		ai_chance = { factor = 10 }
		if = {
			limit = {
				has_country_flag = strengthened_signoria_flag
			}
			custom_tooltip = strengthened_signoria_election_tt
			clr_country_flag = strengthened_signoria_flag
		}
		else = {
			add_scaled_republican_tradition = -4
		}
		if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				NOT = { has_reform = signoria_reform }
			}
			define_ruler = {
				mil = -2
				adm = -2
				dip = -2
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				has_reform = signoria_reform
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = {
				has_reform = signoria_reform
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				mil = -2
				adm = -2
				dip = -2
				min_age = 30
				max_age = 50
				name = "lastname"
			}
		}
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 10
			}
		}
	}
}

########################################
# Colonial Nations                     #
########################################

# Election!
country_event = {
	id = elections.707
	title = "elections.EVTNAME707"
	desc = "elections.EVTDESC707"
	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	option = {
		name = "elections.EVTOPTB707"	# Bureaucrat Candidate
		ai_chance = { factor = 20 }
		FROM = {
			define_ruler = {
				adm = 4
				mil = 2
				dip = 2
				fixed = yes
			}
			set_ruler_flag = appointed_by_overlord
		}
	}
	option = {
		name = "elections.EVTOPTC707"	# Diplomat Candidate
		ai_chance = { factor = 20 }
		FROM = {
			define_ruler = {
				adm = 2
				dip = 4
				mil = 2
				fixed = yes
			}
			set_ruler_flag = appointed_by_overlord
		}
	}
	option = {
		name = "elections.EVTOPTD707"	# Military Candidate
		ai_chance = { factor = 20 }
		FROM = {
			define_ruler = {
				adm = 2
				dip = 2
				mil = 4
				fixed = yes
			}
			set_ruler_flag = appointed_by_overlord
		}
	}
}

# Colonial Assembly
country_event = {
	id = elections.711
	title = "elections.EVTNAME711"
	desc = "elections.EVTDESC711"
	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	option = {
		name = "elections.EVTOPTB711"	# Suspicious indeed...
		tooltip = {
			FROM = {
				add_liberty_desire = 10
			}
		}
	}
}

## Winds of Liberty
#country_event = {
#	id = elections.712
#	title = "elections.EVTNAME712"
#	desc = "elections.EVTDESC712"
#	picture = ELECTION_REPUBLICAN_eventPicture
#
#	is_triggered_only = yes
#
#	option = {
#		name = "elections.EVTOPTB712"	# Most worrisome...
#		tooltip = {
#			FROM = {
#				add_liberty_desire = -25
#			}
#		}
#	}
#}



# States-General mechanic for Republics (Stadtholder, Superb, monastic elections, feuillant)
country_event = {
	id = elections.720
	title = elections.720.t

	desc = {
		trigger = { has_reform = dutch_republic }
		desc = elections.720.da
	}
	desc = {
		trigger = { has_reform = monastic_elections_reform }
		desc = elections.720.dc
	}
	desc = {
		trigger = { has_reform = feuillant_reform }
		desc = elections.720.de
	}
	desc = {
		trigger = { has_reform = genoa_merchants_reform }
		desc = elections.720.df
	}
	desc = {
		trigger = { NOT = { OR = { has_reform = dutch_republic has_reform = genoa_merchants_reform  } } }
		desc = elections.720.db
	}


	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	trigger = {
		NOT = {
			OR = {
				has_reform = primitive_mechanic
				government = tribal
			}
		}
		has_states_general_mechanic = yes
		OR = {
			is_lesser_in_union = no
			is_statists_in_power = yes
		}
	}


	immediate = {
		hidden_effect = {
			if = {
				limit = { has_reform = genoa_merchants_reform }
				random_list = {
					1 = { set_variable = { which = candidate_select_a value = 1 } }
					1 = { set_variable = { which = candidate_select_a value = 2 } }
					1 = { set_variable = { which = candidate_select_a value = 3 } }
					1 = { set_variable = { which = candidate_select_a value = 4 } }
					1 = { set_variable = { which = candidate_select_a value = 5 } }
				}
				random_list = {
					1 = { set_variable = { which = candidate_select_b value = 1 } }
					1 = { set_variable = { which = candidate_select_b value = 2 } }
					1 = { set_variable = { which = candidate_select_b value = 3 } }
					1 = { set_variable = { which = candidate_select_b value = 4 } }
					1 = { set_variable = { which = candidate_select_b value = 5 } }
					1 = { set_variable = { which = candidate_select_b value = 6 } }
					1 = { set_variable = { which = candidate_select_b value = 7 } }
					1 = { set_variable = { which = candidate_select_b value = 8 } }
					1 = { set_variable = { which = candidate_select_b value = 9 } }
					1 = { set_variable = { which = candidate_select_b value = 10 } }
					1 = { set_variable = { which = candidate_select_b value = 11 } }
					1 = { set_variable = { which = candidate_select_b value = 12 } }
					1 = { set_variable = { which = candidate_select_b value = 13 } }
					1 = { set_variable = { which = candidate_select_b value = 14 } }
					1 = { set_variable = { which = candidate_select_b value = 15 } }
					1 = { set_variable = { which = candidate_select_b value = 16 } }
					1 = { set_variable = { which = candidate_select_b value = 17 } }
				}
				if = {
					limit = { republic_with_female_rulers_trigger = yes }
					if = {
						limit = { check_variable = { which = candidate_select_a value = 5 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							random_gender = yes
							option = 0
							dynasty = "de Fornari"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 4 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "de Franchi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 3 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Giustiniani"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 2 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Promontori"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 1 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Sauli"
						}
					}
					#
					if = {
						limit = { check_variable = { which = candidate_select_b value = 17 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Calvi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 16 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Cattaneo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 15 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Centurione"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 14 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Cicala"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 13 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Grillo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 12 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Grimaldi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 11 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Imperiale"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 10 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Interiano"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 9 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Lercari"
						}
					}

					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 8 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Lomellini"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 7 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Negrone"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 6 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Pallavicino"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 5 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Pinelli"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 4 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Salvago"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 3 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Spinola"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 2 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Usodimare"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 1 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Vivaldi"
						}
					}
				}
				else_if = {
					limit = { NOT = { republic_with_female_rulers_trigger = yes } }
					if = {
						limit = { check_variable = { which = candidate_select_a value = 5 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "de Fornari"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 4 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "de Franchi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 3 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Giustiniani"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 2 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Promontori"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 1 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Sauli"
						}
					}
					#
					if = {
						limit = { check_variable = { which = candidate_select_b value = 17 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Calvi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 16 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Cattaneo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 15 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Centurione"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 14 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Cicala"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 13 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Grillo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 12 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Grimaldi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 11 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Imperiale"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 10 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Interiano"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 9 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Lercari"
						}
					}

					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 8 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Lomellini"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 7 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Negrone"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 6 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Pallavicino"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 5 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Pinelli"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 4 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Salvago"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 3 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Spinola"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 2 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Usodimare"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 1 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Vivaldi"
						}
					}
				}
			}
		}
	}

	after = {
		clear_exiled_ruler = new_alberghi_candidate_@ROOT
		clear_exiled_ruler = old_alberghi_candidate_@ROOT
		#if = { #NOT NEEDED, I DONT THINK
		#	limit = { has_reform = genoa_merchants_reform OR = { check_variable = { which = candidate_select_a value = 1 } check_variable = { which = candidate_select_b value = 1 } } }
		#	set_variable = { which = candidate_select_a value = 1 }
		#	set_variable = { which = candidate_select_b value = 1 }
		#}
	}


	#GENERAL + STADTHOLDER REPUBLCI
	option = {
		name = elections.720.a
		trigger = {
			NOT = {
				OR = {
					has_reform = monastic_elections_reform
					has_reform = feuillant_reform
					has_reform = genoa_merchants_reform
				}
			}
		}
		define_ruler = {
		}
		change_statists_vs_orangists = -0.33

	}

	#DUTCH REPUBLIC/STADTHOLDER REPUBLIC
	option = {
		trigger = { has_reform = dutch_republic }
		name = elections.720.b
		define_ruler = {
			dynasty = "van Oranje"
		}
		change_statists_vs_orangists = 0.33
	}

	#FEUILLANT
	option = {
		trigger = { has_reform = feuillant_reform }
		name = elections.720.g
		define_ruler = {
		}
		add_faction_influence = {
			faction = rr_jacobins
			influence = 20
		}
		change_statists_vs_orangists = -0.33
	}
	option = {
		trigger = { has_reform = feuillant_reform }
		name = elections.720.h
		define_ruler = {
		}
		add_faction_influence = {
			faction = rr_girondists
			influence = 20
		}
		change_statists_vs_orangists = -0.33
	}
	#
	option = {
		trigger = {
			NOT = {
				OR = {
					has_reform = dutch_republic
					has_reform = monastic_elections_reform
					has_reform = genoa_merchants_reform
				}
			}
		}
		name = elections.720.c
		if = {
			limit = {
				has_reform = feuillant_reform
				tag = FRA
			}
			define_ruler = {
				dynasty = "Bonaparte"
			}
		}
		else_if = {
			limit = {
				has_reform = feuillant_reform
				NOT = { tag = FRA }
			}
			define_ruler = {
			}
		}
		else = {
			define_ruler = {
				dynasty = historic_dynasty # Will pick one weighted by how many rulers a family has had
			}
		}
		if = {
			limit = {
				has_reform = feuillant_reform
			}
			add_faction_influence = {
				faction = rr_royalists
				influence = 20
			}
		}
		change_statists_vs_orangists = 0.33
	}

	# MONASTIC ELECTIONS
	option = {
		name = elections.720.e
		trigger = { has_reform = monastic_elections_reform }
		define_ruler = {
		}
		change_statists_vs_orangists = -0.33
	}
	#
	option = {
		trigger = { has_reform = monastic_elections_reform }
		name = elections.720.f
		define_ruler = {
		}
		change_statists_vs_orangists = 0.33
	}

	#GENOA/SUPERB REPUBLIC
	option = { # New Alberghi - 5 aggregate families
		name = elections.720.i
		trigger = { has_reform = genoa_merchants_reform }
		set_ruler = new_alberghi_candidate_@ROOT
		change_statists_vs_orangists = -0.33
	}
	#
	option = { # Old Alberghi - 23 aggregate families
		trigger = { has_reform = genoa_merchants_reform }
		name = elections.720.j
		set_ruler = old_alberghi_candidate_@ROOT
		change_statists_vs_orangists = 0.33
	}
	option = {
		name = "EVTOPTA700"	# Current ruler is reelected
		trigger = {
			#is_statists_in_power = yes
			NOT = { has_ruler_flag = leader_has_been_pushed_out }
			has_reform = republicanism_reform
		}
		ai_chance = {
			factor = 60
			modifier = {
				factor = 0
				NOT = { statists_vs_orangists = -0.5 }
			}
			modifier = {
				factor = 0.5
				NOT = { statists_vs_orangists = 0.25 }
			}
			modifier = {
				factor = 0.5
				NOT = { statists_vs_orangists = 0.5 }
			}
			modifier = {
				factor = 2.0
				statists_vs_orangists = 1
			}
		}
		custom_tooltip = remains_ruler
		random_list = {
			10 = { change_adm = 1 add_adm_power = 50 }
			10 = { change_dip = 1 add_dip_power = 50 }
			10 = { change_mil = 1 add_mil_power = 50 }
		}
		if = { #RES PUBLICA + NOT REVOLUTIONARY
			limit = {
				has_dlc = "Res Publica"
				is_tribal = no
				government = republic
				NOT = { republican_tradition = 20 }
				NOT = { is_revolutionary_republic_trigger = yes }
			}
			if = {
				limit = { NOT = { statists_vs_orangists = -1 } }
				change_statists_vs_orangists = 0.5
			}
			else_if = {
				limit = { statists_vs_orangists = -1 }
				add_government_reform = presidential_despot_reform
			}
		}
		else_if = { # RES Publica + REVOLUTIONARY
			limit = {
				has_dlc = "Res Publica"
				is_tribal = no
				government = republic
				NOT = { republican_tradition = 20 }
				is_revolutionary_republic_trigger = yes
			}
			if = {
				limit = { NOT = { statists_vs_orangists = -1 } }
				change_statists_vs_orangists = 0.5
			}
			else_if = {
				limit = { statists_vs_orangists = -1 }
				change_government_to_monarchy = yes
				add_government_reform = revolutionary_empire_reform
			}
		}
		add_scaled_republican_tradition = -10
		add_karma = -5 #JUST IN CASE
	}

	option = { # Nepotism for Genoa + MAYBE Stadtholder Rep
		name = elections.800.e
		trigger = {
			has_reform = nepotism_reform
			#has_government_attribute = enables_nepotism
			OR = {
				has_reform = genoa_merchants_reform
				has_reform = dutch_republic
			}
		}
		add_republican_tradition = -15
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
			}
		}
	}
}

country_event = {
	id = elections.721
	title = elections.720.t

	desc = {
		trigger = { has_reform = dutch_republic }
		desc = elections.721.da
	}
	desc = {
		trigger = { has_reform = monastic_elections_reform }
		desc = elections.721.dc
	}
	desc = {
		trigger = { has_reform = feuillant_reform }
		desc = elections.721.de
	}
	desc = {
		trigger = { has_reform = genoa_merchants_reform }
		desc = elections.721.df
	}
	desc = {
		trigger = { NOT = { OR = { has_reform = dutch_republic has_reform = genoa_merchants_reform  } } }
		desc = elections.721.db
	}

	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	trigger = {
		NOT = {
			OR = {
				has_reform = primitive_mechanic
				government = tribal
			}
		}
		has_states_general_mechanic = yes
		OR = {
			is_lesser_in_union = no
			is_statists_in_power = yes
		}
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = { has_reform = genoa_merchants_reform }
				random_list = {
					1 = { set_variable = { which = candidate_select_a value = 1 } }
					1 = { set_variable = { which = candidate_select_a value = 2 } }
					1 = { set_variable = { which = candidate_select_a value = 3 } }
					1 = { set_variable = { which = candidate_select_a value = 4 } }
					1 = { set_variable = { which = candidate_select_a value = 5 } }
				}
				random_list = {
					1 = { set_variable = { which = candidate_select_b value = 1 } }
					1 = { set_variable = { which = candidate_select_b value = 2 } }
					1 = { set_variable = { which = candidate_select_b value = 3 } }
					1 = { set_variable = { which = candidate_select_b value = 4 } }
					1 = { set_variable = { which = candidate_select_b value = 5 } }
					1 = { set_variable = { which = candidate_select_b value = 6 } }
					1 = { set_variable = { which = candidate_select_b value = 7 } }
					1 = { set_variable = { which = candidate_select_b value = 8 } }
					1 = { set_variable = { which = candidate_select_b value = 9 } }
					1 = { set_variable = { which = candidate_select_b value = 10 } }
					1 = { set_variable = { which = candidate_select_b value = 11 } }
					1 = { set_variable = { which = candidate_select_b value = 12 } }
					1 = { set_variable = { which = candidate_select_b value = 13 } }
					1 = { set_variable = { which = candidate_select_b value = 14 } }
					1 = { set_variable = { which = candidate_select_b value = 15 } }
					1 = { set_variable = { which = candidate_select_b value = 16 } }
					1 = { set_variable = { which = candidate_select_b value = 17 } }
				}
				if = {
					limit = { republic_with_female_rulers_trigger = yes }
					if = {
						limit = { check_variable = { which = candidate_select_a value = 5 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							random_gender = yes
							option = 0
							dynasty = "de Fornari"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 4 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "de Franchi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 3 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Giustiniani"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 2 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Promontori"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 1 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							random_gender = yes
							dynasty = "Sauli"
						}
					}
					#
					if = {
						limit = { check_variable = { which = candidate_select_b value = 17 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Calvi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 16 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Cattaneo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 15 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Centurione"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 14 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Cicala"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 13 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Grillo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 12 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Grimaldi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 11 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Imperiale"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 10 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Interiano"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 9 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Lercari"
						}
					}

					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 8 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Lomellini"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 7 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Negrone"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 6 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Pallavicino"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 5 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Pinelli"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 4 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Salvago"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 3 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Spinola"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 2 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Usodimare"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 1 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							random_gender = yes
							dynasty = "Vivaldi"
						}
					}
				}
				else_if = {
					limit = { NOT = { republic_with_female_rulers_trigger = yes } }
					if = {
						limit = { check_variable = { which = candidate_select_a value = 5 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "de Fornari"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 4 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "de Franchi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 3 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Giustiniani"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 2 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Promontori"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_a value = 1 } }
						define_exiled_ruler = {
							exiled_as = new_alberghi_candidate_@ROOT
							adm = 2
							max_random_adm = 5
							dip = 4
							max_random_dip = 6
							mil = 0
							max_random_mil = 2
							option = 0
							dynasty = "Sauli"
						}
					}
					#
					if = {
						limit = { check_variable = { which = candidate_select_b value = 17 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Calvi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 16 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Cattaneo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 15 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Centurione"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 14 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Cicala"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 13 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Grillo"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 12 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Grimaldi"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 11 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Imperiale"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 10 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Interiano"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 9 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Lercari"
						}
					}

					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 8 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Lomellini"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 7 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Negrone"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 6 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Pallavicino"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 5 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Pinelli"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 4 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Salvago"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 3 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Spinola"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 2 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Usodimare"
						}
					}
					else_if = {
						limit = { check_variable = { which = candidate_select_b value = 1 } }
						define_exiled_ruler = {
							exiled_as = old_alberghi_candidate_@ROOT
							adm = 0
							max_random_adm = 2
							dip = 4
							max_random_dip = 6
							mil = 2
							max_random_mil = 5
							option = 1
							dynasty = "Vivaldi"
						}
					}
				}
			}
		}
	}

	after = {
		clear_exiled_ruler = new_alberghi_candidate_@ROOT
		clear_exiled_ruler = old_alberghi_candidate_@ROOT
		#if = { #NOT NEEDED, I DONT THINK
		#	limit = { has_reform = genoa_merchants_reform OR = { check_variable = { which = candidate_select_a value = 1 } check_variable = { which = candidate_select_b value = 1 } } }
		#	set_variable = { which = candidate_select_a value = 1 }
		#	set_variable = { which = candidate_select_b value = 1 }
		#}
	}

	#GENERAL + STADTHOLDER REPUBLIC
	option = {
		name = elections.720.a
		trigger = {
			NOT = { has_reform = monastic_elections_reform }
			NOT = { has_reform = feuillant_reform }
		}
		define_ruler = {
		}
		change_statists_vs_orangists = -0.33

	}

	#STADTHOLDER REPUBLIC
	option = {
		trigger = { has_reform = dutch_republic }
		name = elections.720.b
		define_ruler = {
			dynasty = "van Oranje"
		}
		change_statists_vs_orangists = 0.33
	}

	#FEUILLANT
	option = {
		trigger = { has_reform = feuillant_reform }
		name = elections.720.g
		define_ruler = {
		}
		add_faction_influence = {
			faction = rr_jacobins
			influence = 20
		}
		change_statists_vs_orangists = -0.33
	}

	option = {
		trigger = { has_reform = feuillant_reform }
		name = elections.720.h
		define_ruler = {
		}
		add_faction_influence = {
			faction = rr_girondists
			influence = 20
		}
		change_statists_vs_orangists = -0.33
	}
	option = {
		trigger = {
			NOT = {
				OR = {
					has_reform = dutch_republic
					has_reform = monastic_elections_reform
				}
			}
		}
		name = elections.720.c
		if = {
			limit = {
				has_reform = feuillant_reform
				tag = FRA
			}
			define_ruler = {
				dynasty = "Bonaparte"
			}
		}
		else_if = {
			limit = {
				has_reform = feuillant_reform
				NOT = { tag = FRA }
			}
			define_ruler = {
			}
		}
		else = {
			define_ruler = {
				dynasty = historic_dynasty # Will pick one weighted by how many rulers a family has had
			}
		}
		if = {
			limit = {
				has_reform = feuillant_reform
			}
			add_faction_influence = {
				faction = rr_royalists
				influence = 20
			}
		}
		change_statists_vs_orangists = 0.33
	}

	#MONASTIC ELECTIONS
	option = {
		name = elections.720.e
		trigger = { has_reform = monastic_elections_reform }
		define_ruler = {
		}
		change_statists_vs_orangists = -0.33
	}

	option = {
		trigger = { has_reform = monastic_elections_reform }
		name = elections.720.f
		define_ruler = {
		}
		change_statists_vs_orangists = 0.33
	}

	#GENOA/SUPERB REPUBLIC
	option = { # New Alberghi - 5 aggregate families
		name = elections.720.i
		trigger = { has_reform = genoa_merchants_reform }
		set_ruler = new_alberghi_candidate_@ROOT
		change_statists_vs_orangists = -0.33
	}
	#
	option = { # Old Alberghi - 23 aggregate families
		trigger = { has_reform = genoa_merchants_reform }
		name = elections.720.j
		set_ruler = old_alberghi_candidate_@ROOT
		change_statists_vs_orangists = 0.33
	}
	option = { # Nepotism for Genoa + MAYBE Stadtholder Rep
		name = elections.800.e
		trigger = {
			has_reform = nepotism_reform
			#has_government_attribute = enables_nepotism
			OR = {
				has_reform = genoa_merchants_reform
				has_reform = dutch_republic
			}
		}
		add_republican_tradition = -15
		if = {
			limit = { republic_with_female_rulers_trigger = yes }
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else = {
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
			}
		}
	}
}

# Lottery Election by Daniel Tolman
country_event = {
	id = elections.800
	title = elections.800.t
	desc = elections.800.d
	picture = ELECTION_REPUBLICAN_eventPicture

	is_triggered_only = yes

	trigger = {
		has_government_attribute = lottery_election
		NOT = { has_disaster =  bonfire_of_the_vanities_disaster }
	}

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					NOT = { has_country_flag = ven_new_promissione_ducale }
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_a_@ROOT
					random_gender = yes
					min_age = 50
					max_age = 75
					adm = 2
					dip = -1
					mil = -1
					option = 0
				}
			}
			else_if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_a_@ROOT
					random_gender = yes
					min_age = 50
					max_age = 75
					adm = 3
					dip = -1
					mil = -1
					option = 0
				}
			}
			else_if = {
				limit = {
					NOT = { republic_with_female_rulers_trigger = yes }
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_a_@ROOT
					min_age = 50
					max_age = 75
					adm = 3
					dip = -1
					mil = -1
					option = 0
				}
			}
			else = {
				define_exiled_ruler = {
					exiled_as = lottery_candidate_a_@ROOT
					min_age = 50
					max_age = 75
					adm = 2
					dip = -1
					mil = -1
					option = 0
				}
			}
			if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					NOT = { has_country_flag = ven_new_promissione_ducale }
				}

				define_exiled_ruler = {
					exiled_as = lottery_candidate_b_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = 2
					mil = -1
					random_gender = yes
					option = 1
				}
			}
			else_if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_b_@ROOT
					random_gender = yes
					min_age = 50
					max_age = 75
					adm = -1
					dip = 3
					mil = -1
					option = 0
				}
			}
			else_if = {
				limit = {
					NOT = { republic_with_female_rulers_trigger = yes }
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_b_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = 3
					mil = -1
					option = 0
				}
			}
			else = {
				define_exiled_ruler = {
					exiled_as = lottery_candidate_b_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = 2
					mil = -1
					option = 1
				}
			}
			if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					NOT = { has_country_flag = ven_new_promissione_ducale }
				}

				define_exiled_ruler = {
					exiled_as = lottery_candidate_c_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = -1
					mil = 2
					random_gender = yes
					option = 2
				}
			}
			else_if = {
				limit = {
					republic_with_female_rulers_trigger = yes
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_c_@ROOT
					random_gender = yes
					min_age = 50
					max_age = 75
					adm = -1
					dip = -1
					mil = 3
					option = 0
				}
			}
			else_if = {
				limit = {
					NOT = { republic_with_female_rulers_trigger = yes }
					has_country_flag = ven_new_promissione_ducale
				}
				define_exiled_ruler = {
					exiled_as = lottery_candidate_c_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = -1
					mil = 3
					option = 0
				}
			}
			else = {
				define_exiled_ruler = {
					exiled_as = lottery_candidate_c_@ROOT
					min_age = 50
					max_age = 75
					adm = -1
					dip = -1
					mil = 2
					option = 2
				}
			}
		}
	}

	after = {
		clear_exiled_ruler = lottery_candidate_a_@ROOT
		clear_exiled_ruler = lottery_candidate_b_@ROOT
		clear_exiled_ruler = lottery_candidate_c_@ROOT
	}

	option = {
		name = elections.800.a
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_a_@ROOT
		add_republican_tradition = -25
		if = {
			limit = {
				has_faction = mr_guilds
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 20
			}
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = {
		name = elections.800.b
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_b_@ROOT
		add_republican_tradition = -25
		if = {
			limit = {
				has_faction = mr_traders
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 20
			}
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = {
		name = elections.800.c
		ai_chance = {
			factor = 0
		}
		set_ruler = lottery_candidate_c_@ROOT
		add_republican_tradition = -25
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 20
			}
		}
		custom_tooltip = lottery_candidate_bonus_one
	}
	option = { # lottery
		name = elections.800.da
		ai_chance = {
			factor = 90
		}
		random_list = {
			33 = {
				set_ruler = lottery_candidate_a_@ROOT
				if = {
					limit = {
						has_faction = mr_guilds
					}
					add_faction_influence = {
						faction = mr_guilds
						influence = 20
					}
				}
				if = {
					limit = {
						has_faction = rr_jacobins
					}
					add_faction_influence = {
						faction = rr_jacobins
						influence = 20
					}
				}
			}
			33 = {
				set_ruler = lottery_candidate_b_@ROOT
				if = {
					limit = {
						has_faction = mr_traders
					}
					add_faction_influence = {
						faction = mr_traders
						influence = 20
					}
				}
				if = {
					limit = {
						has_faction = rr_royalists
					}
					add_faction_influence = {
						faction = rr_royalists
						influence = 20
					}
				}
			}
			33 = {
				set_ruler = lottery_candidate_c_@ROOT
				if = {
					limit = {
						has_faction = mr_aristocrats
					}
					add_faction_influence = {
						faction = mr_aristocrats
						influence = 20
					}
				}
				if = {
					limit = {
						has_faction = rr_girondists
					}
					add_faction_influence = {
						faction = rr_girondists
						influence = 20
					}
				}
			}
		}
		custom_tooltip = lottery_candidate_bonus_plural
	}
	option = { # nepotism
		name = elections.800.e
		trigger = {
			has_government_attribute = enables_nepotism
		}
		ai_chance = { factor = 10 }
		if = {
			limit = {
				has_country_flag = strengthened_signoria_flag
			}
			custom_tooltip = strengthened_signoria_election_tt
			clr_country_flag = strengthened_signoria_flag
		}
		else = {
			add_republican_tradition = -15
		}
		if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				NOT = { has_reform = signoria_reform }
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = {
				republic_with_female_rulers_trigger = yes
				has_reform = signoria_reform
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
				random_gender = yes # Allows random gender for republics
			}
		}
		else_if = {
			limit = {
				NOT = { republic_with_female_rulers_trigger = yes }
				has_reform = signoria_reform
			}
			define_ruler = {
				min_age = 30
				max_age = 50
				name = "lastname"
			}
		}
		else = {
			define_ruler = {
				min_age = 30
				max_age = 50
				mil = -1
				adm = -1
				dip = -1
				name = "lastname"
			}
		}
		if = {
			limit = {
				has_faction = mr_aristocrats
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 10
			}
		}
	}
}